{"version":3,"sources":["./src/addons/mod/chat/pages/chat/chat.html","./src/addons/mod/chat/pages/index/index.html","./src/addons/mod/chat/pages/session-messages/session-messages.html","./src/addons/mod/chat/pages/sessions/sessions.html","./src/addons/mod/chat/chat-lazy.module.ts","./src/addons/mod/chat/classes/chat-sessions-source.ts","./src/addons/mod/chat/pages/chat/chat.scss","./src/addons/mod/chat/pages/chat/chat.ts","./src/addons/mod/chat/pages/index/index.ts","./src/addons/mod/chat/pages/session-messages/session-messages.scss","./src/addons/mod/chat/pages/session-messages/session-messages.ts","./src/addons/mod/chat/pages/sessions/sessions.ts"],"names":[],"mappings":"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","file":"chat-lazy-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\n                </core-format-text>\\n            </h1>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" *ngIf=\\\"loaded\\\" (click)=\\\"showChatUsers()\\\" [attr.aria-label]=\\\"'core.users' | translate\\\">\\n                <ion-icon name=\\\"fas-users\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <ion-list class=\\\"addon-messages-discussion-container\\\" aria-live=\\\"polite\\\">\\n            <ng-container *ngFor=\\\"let message of messages; index as index; last as last\\\">\\n\\n                <p class=\\\"ion-text-center addon-messages-date\\\" *ngIf=\\\"message.showDate\\\">\\n                    {{ message.timestamp * 1000 | coreFormatDate: \\\"strftimedayshort\\\" }}\\n                </p>\\n\\n                <div class=\\\"ion-text-center addon-mod_chat-notice\\\" *ngIf=\\\"message.special\\\">\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"success\\\" *ngIf=\\\"message.system && message.message == 'enter'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-in-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageenter' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"danger\\\" *ngIf=\\\"message.system && message.message == 'exit'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-out-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageexit' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\" *ngIf=\\\"message.beep == 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepseveryone' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\"\\n                        *ngIf=\\\"message.userid != currentUserId && message.beep == currentUserId\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepsyou' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"light\\\"\\n                        *ngIf=\\\"message.userid == currentUserId && message.beep && message.beep != 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageyoubeep' | translate:{$a: message.beepWho} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"info\\\" *ngIf=\\\"!message.system && !message.beep\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-asterisk\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            <strong>\\n                                {{ message.userfullname }} <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\"\\n                                    [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\" (afterRender)=\\\"last && scrollToBottom()\\\">\\n                                </core-format-text>\\n                            </strong>\\n                        </span>\\n                    </ion-badge>\\n                </div>\\n\\n                <ion-item *ngIf=\\\"!message.special\\\" class=\\\"ion-text-wrap addon-message\\\"\\n                    [class.addon-message-mine]=\\\"message.userid == currentUserId\\\"\\n                    [class.addon-message-not-mine]=\\\"message.userid != currentUserId\\\" [class.addon-message-no-user]=\\\"!message.showUserData\\\"\\n                    [@coreSlideInOut]=\\\"message.userid == currentUserId ? '' : 'fromLeft'\\\">\\n                    <ion-label>\\n                        <!-- User data. -->\\n                        <h2 class=\\\"addon-message-user\\\" *ngIf=\\\"message.showUserData\\\">\\n                            <core-user-avatar slot=\\\"start\\\" [user]=\\\"message\\\" [linkProfile]=\\\"false\\\">\\n                            </core-user-avatar>\\n                            <div>{{ message.userfullname }}</div>\\n                        </h2>\\n\\n                        <div class=\\\"addon-message-text\\\">\\n                            <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\"\\n                                [courseId]=\\\"courseId\\\" (afterRender)=\\\"last && scrollToBottom()\\\">\\n                            </core-format-text>\\n                        </div>\\n                    </ion-label>\\n                    <ion-note slot=\\\"end\\\">{{ message.timestamp * 1000 | coreFormatDate: \\\"strftimetime\\\" }}</ion-note>\\n                    <div class=\\\"tail\\\" *ngIf=\\\"message.showTail\\\"></div>\\n                </ion-item>\\n            </ng-container>\\n        </ion-list>\\n\\n        <core-empty-box *ngIf=\\\"!messages || messages.length <= 0\\\" icon=\\\"far-comments\\\" [message]=\\\"'addon.mod_chat.nomessages' | translate\\\">\\n        </core-empty-box>\\n    </core-loading>\\n</ion-content>\\n<ion-footer class=\\\"footer-adjustable\\\">\\n    <ion-toolbar [color]=\\\"isOnline && polling && loaded ? 'contrast' : 'light'\\\">\\n        <p class=\\\"ion-text-center\\\" *ngIf=\\\"!isOnline\\\">\\n            {{ 'addon.mod_chat.mustbeonlinetosendmessages' | translate }}\\n        </p>\\n\\n        <core-send-message-form [sendDisabled]=\\\"sending\\\" *ngIf=\\\"isOnline && polling && loaded\\\" [message]=\\\"newMessage\\\"\\n            (onSubmit)=\\\"sendMessage($event)\\\" [placeholder]=\\\"'addon.messages.newmessage' | translate\\\">\\n        </core-send-message-form>\\n\\n        <ion-button *ngIf=\\\"isOnline && !polling && loaded\\\" (click)=\\\"reconnect()\\\" expand=\\\"block\\\" fill=\\\"outline\\\">\\n            {{ 'core.login.reconnect' | translate }}\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-footer>\\n\";","export default \"<ion-header collapsible>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"module?.id\\\" [courseId]=\\\"courseId\\\">\\n                </core-format-text>\\n            </h1>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <!-- The buttons defined by the component will be added in here. -->\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"limited-width\\\">\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"activityComponent?.showLoading\\\" (ionRefresh)=\\\"activityComponent?.doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <addon-mod-chat-index [module]=\\\"module\\\" [courseId]=\\\"courseId\\\" (dataRetrieved)=\\\"updateData($event)\\\"></addon-mod-chat-index>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>{{ 'addon.mod_chat.messages' | translate }}</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshMessages($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <ion-list class=\\\"addon-messages-discussion-container\\\">\\n            <ng-container *ngFor=\\\"let message of messages; index as index;\\\">\\n\\n                <div class=\\\"ion-text-center addon-messages-date\\\" *ngIf=\\\"message.showDate\\\">\\n                    {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimedayshort\\\" }}\\n                </div>\\n\\n                <div class=\\\"ion-text-center addon-mod_chat-notice\\\" *ngIf=\\\"message.special\\\">\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"success\\\" *ngIf=\\\"message.issystem && message.message == 'enter'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-in-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageenter' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"danger\\\" *ngIf=\\\"message.issystem && message.message == 'exit'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-out-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageexit' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\" *ngIf=\\\"message.beep == 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepseveryone' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\"\\n                        *ngIf=\\\"message.userid != currentUserId && message.beep == currentUserId\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepsyou' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"light\\\"\\n                        *ngIf=\\\"message.userid == currentUserId && message.beep && message.beep != 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageyoubeep' | translate:{$a: message.beepWho} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"info\\\" *ngIf=\\\"!message.issystem && !message.beep\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-asterisk\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            <strong>\\n                                {{ message.userfullname }} <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\"\\n                                    [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\"></core-format-text>\\n                            </strong>\\n                        </span>\\n                    </ion-badge>\\n                </div>\\n\\n                <ion-item *ngIf=\\\"!message.special\\\" class=\\\"ion-text-wrap addon-message\\\"\\n                    [class.addon-message-mine]=\\\"message.userid == currentUserId\\\"\\n                    [class.addon-message-not-mine]=\\\"message.userid != currentUserId\\\" [class.addon-message-no-user]=\\\"!message.showUserData\\\">\\n                    <ion-label>\\n                        <!-- User data. -->\\n                        <h2 class=\\\"addon-message-user\\\">\\n                            <core-user-avatar slot=\\\"start\\\" [user]=\\\"message\\\" [linkProfile]=\\\"false\\\" *ngIf=\\\"message.showUserData\\\">\\n                            </core-user-avatar>\\n                            <div *ngIf=\\\"message.showUserData\\\">{{ message.userfullname }}</div>\\n                        </h2>\\n\\n                        <div class=\\\"addon-message-text\\\">\\n                            <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\"\\n                                [courseId]=\\\"courseId\\\">\\n                            </core-format-text>\\n                        </div>\\n                    </ion-label>\\n                    <ion-note slot=\\\"end\\\">{{ message.timestamp * 1000 | coreFormatDate: \\\"strftimetime\\\" }}</ion-note>\\n                    <div class=\\\"tail\\\" *ngIf=\\\"message.showTail\\\"></div>\\n                </ion-item>\\n            </ng-container>\\n        </ion-list>\\n    </core-loading>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>{{ 'addon.mod_chat.chatreport' | translate }}</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-split-view>\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!sessions.loaded\\\" (ionRefresh)=\\\"refreshSessions($event.target)\\\">\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n        </ion-refresher>\\n        <core-loading [hideUntil]=\\\"sessions.loaded\\\">\\n            <ion-item class=\\\"ion-text-wrap core-group-selector\\\" *ngIf=\\\"groupInfo && (groupInfo.separateGroups || groupInfo.visibleGroups)\\\">\\n                <ion-label id=\\\"addon-chat-groupslabel\\\">\\n                    <ng-container *ngIf=\\\"groupInfo.separateGroups\\\">{{'core.groupsseparate' | translate }}</ng-container>\\n                    <ng-container *ngIf=\\\"groupInfo.visibleGroups\\\">{{'core.groupsvisible' | translate }}</ng-container>\\n                </ion-label>\\n                <ion-select [(ngModel)]=\\\"groupId\\\" (ionChange)=\\\"reloadSessions()\\\" aria-labelledby=\\\"addon-chat-groupslabel\\\"\\n                    interface=\\\"action-sheet\\\" [interfaceOptions]=\\\"{header: 'core.group' | translate}\\\">\\n                    <ion-select-option *ngFor=\\\"let groupOpt of groupInfo.groups\\\" [value]=\\\"groupOpt.id\\\">\\n                        {{groupOpt.name}}\\n                    </ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label>{{ 'addon.mod_chat.showincompletesessions' | translate }}</ion-label>\\n                <ion-toggle [(ngModel)]=\\\"showAll\\\" (ionChange)=\\\"reloadSessions()\\\"></ion-toggle>\\n            </ion-item>\\n\\n            <ion-card *ngFor=\\\"let session of sessions.items\\\" (click)=\\\"sessions.select(session)\\\" button\\n                [attr.aria-current]=\\\"sessions.getItemAriaCurrent(session)\\\"\\n                [class.addon-mod-chat-session-show-more]=\\\"session.sessionusers.length < session.allsessionusers.length\\\">\\n\\n                <ion-item class=\\\"ion-text-wrap\\\">\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">{{ session.sessionstart * 1000 | coreFormatDate }}</p>\\n                        <p *ngIf=\\\"session.duration\\\">{{ session.duration | coreDuration }}</p>\\n                    </ion-label>\\n                </ion-item>\\n                <ion-card-content>\\n                    <ion-item *ngFor=\\\"let user of session.sessionusers\\\">\\n                        <ion-label>\\n                            {{ user.userfullname }} <span *ngIf=\\\"user.messagecount\\\">({{ user.messagecount }})</span>\\n                        </ion-label>\\n                    </ion-item>\\n                </ion-card-content>\\n                <ion-button *ngIf=\\\"session.sessionusers.length < session.allsessionusers.length\\\" fill=\\\"clear\\\" expand=\\\"block\\\"\\n                    (click)=\\\"showMoreUsers(session, $event)\\\">\\n                    {{ 'core.showmore' | translate }}\\n                </ion-button>\\n            </ion-card>\\n\\n            <core-empty-box *ngIf=\\\"sessions.empty\\\" icon=\\\"far-comments\\\" [message]=\\\"'addon.mod_chat.nosessionsfound' | translate\\\">\\n            </core-empty-box>\\n        </core-loading>\\n    </core-split-view>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModChatComponentsModule } from './components/components.module';\nimport { AddonModChatIndexPage } from './pages/index/index';\nimport { AddonModChatChatPage } from './pages/chat/chat';\nimport { AddonModChatSessionMessagesPage } from './pages/session-messages/session-messages';\nimport { CoreScreen } from '@services/screen';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { AddonModChatSessionsPage } from './pages/sessions/sessions';\nimport { CanLeaveGuard } from '@guards/can-leave';\n\nconst commonRoutes: Routes = [\n    {\n        path: ':courseId/:cmId',\n        component: AddonModChatIndexPage,\n    },\n    {\n        path: ':courseId/:cmId/chat',\n        component: AddonModChatChatPage,\n        canDeactivate: [CanLeaveGuard],\n    },\n];\n\nconst mobileRoutes: Routes = [\n    ...commonRoutes,\n    {\n        path: ':courseId/:cmId/sessions',\n        component: AddonModChatSessionsPage,\n    },\n    {\n        path: ':courseId/:cmId/sessions/:sessionStart/:sessionEnd',\n        component: AddonModChatSessionMessagesPage,\n    },\n];\n\nconst tabletRoutes: Routes = [\n    ...commonRoutes,\n    {\n        path: ':courseId/:cmId/sessions',\n        component: AddonModChatSessionsPage,\n        children: [\n            {\n                path: ':sessionStart/:sessionEnd',\n                component: AddonModChatSessionMessagesPage,\n            },\n        ],\n    },\n];\n\nconst routes: Routes = [\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonModChatComponentsModule,\n    ],\n    declarations: [\n        AddonModChatIndexPage,\n        AddonModChatChatPage,\n        AddonModChatSessionsPage,\n        AddonModChatSessionMessagesPage,\n    ],\n})\nexport class AddonModChatLazyModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Params } from '@angular/router';\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreGroupInfo, CoreGroups } from '@services/groups';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { AddonModChat, AddonModChatSession, AddonModChatSessionUser } from '../services/chat';\n\n/**\n * Provides a collection of sessions.\n */\nexport class AddonModChatSessionsSource extends CoreRoutedItemsManagerSource<AddonModChatSessionFormatted> {\n\n    readonly COURSE_ID: number;\n    readonly CHAT_ID: number;\n    readonly CM_ID: number;\n\n    showAll = false;\n    groupId = 0;\n    groupInfo?: CoreGroupInfo;\n\n    constructor(courseId: number, chatId: number, cmId: number) {\n        super();\n\n        this.COURSE_ID = courseId;\n        this.CHAT_ID = chatId;\n        this.CM_ID = cmId;\n    }\n\n    /**\n     * Invalidate chat cache.\n     */\n    async invalidateCache(): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreUtils.allPromises([\n            CoreGroups.invalidateActivityGroupInfo(this.CM_ID),\n            AddonModChat.invalidateSessions(this.CHAT_ID, this.groupId, this.showAll),\n        ]));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: AddonModChatSessionFormatted[] }> {\n        this.groupInfo = await CoreGroups.getActivityGroupInfo(this.CM_ID, false);\n\n        this.groupId = CoreGroups.validateGroupId(this.groupId, this.groupInfo);\n\n        const sessions = await AddonModChat.getSessions(this.CHAT_ID, this.groupId, this.showAll, { cmId: this.CM_ID });\n\n        // Fetch user profiles.\n        const promises: Promise<unknown>[] = [];\n\n        const formattedSessions = sessions.map((session: AddonModChatSessionFormatted) => {\n            session.duration = session.sessionend - session.sessionstart;\n            session.sessionusers.forEach((sessionUser) => {\n                // The WS does not return the user name, fetch user profile.\n                promises.push(this.loadUserFullname(sessionUser));\n            });\n\n            // If session has more than 4 users we display a \"Show more\" link.\n            session.allsessionusers = session.sessionusers;\n            if (session.sessionusers.length > 4) {\n                session.sessionusers = session.allsessionusers.slice(0, 3);\n            }\n\n            return session;\n        });\n\n        await Promise.all(promises);\n\n        return { items: formattedSessions };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(session: AddonModChatSessionFormatted): string {\n        return `${session.sessionstart}/${session.sessionend}`;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemQueryParams(): Params {\n        return {\n            chatId: this.CHAT_ID,\n            groupId: this.groupId,\n        };\n    }\n\n    /**\n     * Load the fullname of a user.\n     *\n     * @param id User ID.\n     * @return Promise resolved when done.\n     */\n    protected async loadUserFullname(sessionUser: AddonModChatUserSessionFormatted): Promise<void> {\n        if (sessionUser.userfullname) {\n            return;\n        }\n\n        try {\n            const user = await CoreUser.getProfile(sessionUser.userid, this.COURSE_ID, true);\n\n            sessionUser.userfullname = user.fullname;\n        } catch {\n            // Error getting profile, most probably the user is deleted.\n            sessionUser.userfullname = Translate.instant('core.deleteduser') + ' ' + sessionUser.userid;\n        }\n    }\n\n}\n\n/**\n * Fields added to chat session in this view.\n */\nexport type AddonModChatSessionFormatted = Omit<AddonModChatSession, 'sessionusers'> & {\n    duration?: number; // Session duration.\n    sessionusers: AddonModChatUserSessionFormatted[];\n    allsessionusers?: AddonModChatUserSessionFormatted[]; // All session users.\n};\n\n/**\n * Fields added to user session in this view.\n */\nexport type AddonModChatUserSessionFormatted = AddonModChatSessionUser & {\n    userfullname?: string; // User full name.\n};\n","export default \"/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host-context(.ios) ion-footer .toolbar:last-child {\\n  padding-bottom: 4px;\\n  min-height: 0;\\n}\\nion-content {\\n  --content-background: var(--background-alternative);\\n  --background: var(--content-background);\\n}\\nion-content::part(scroll) {\\n  padding-bottom: 0 !important;\\n}\\n.addon-messages-discussion-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 16px !important;\\n  background: var(--content-background);\\n}\\n.addon-messages-date {\\n  font-weight: normal;\\n  font-size: 0.9rem;\\n}\\nion-item.addon-message {\\n  --message-background: var(--addon-messages-message-bg);\\n  --message-activated-background: var(--addon-messages-message-activated-bg);\\n  --message-alignment: flex-start;\\n  border: 0;\\n  border-radius: var(--medium-radius);\\n  padding: 0 8px 0 8px;\\n  margin: 8px;\\n  --background: var(--message-background);\\n  background: var(--message-background);\\n  align-self: var(--message-alignment);\\n  width: 90%;\\n  max-width: var(--list-item-max-width);\\n  --min-height: var(--a11y-min-target-size);\\n  position: relative;\\n  transition: width 500ms ease-in-out;\\n  overflow: visible;\\n}\\nion-item.addon-message::part(native) {\\n  --inner-border-width: 0px;\\n  --inner-padding-end: 0px;\\n  padding: 0;\\n  margin: 0;\\n}\\nion-item.addon-message:hover {\\n  filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));\\n}\\nion-item.addon-message core-format-text > p:only-child {\\n  display: inline;\\n}\\nion-item.addon-message .addon-message-user {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n  margin-top: 0;\\n  color: var(--ion-text-color);\\n}\\nion-item.addon-message .addon-message-user core-user-avatar {\\n  display: block;\\n  --core-avatar-size: var(--addon-messages-avatar-size);\\n  margin: 0;\\n}\\nion-item.addon-message .addon-message-user div {\\n  font-weight: 500;\\n  flex-grow: 1;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\nion-item.addon-message ion-note {\\n  color: var(--addon-messages-message-note-text);\\n  font-size: var(--addon-messages-message-note-font-size);\\n  margin: 0;\\n  padding: 8px 0;\\n  align-self: flex-start;\\n}\\nion-item.addon-message[tappable]:active {\\n  --message-background: var(--message-activated-background);\\n}\\nion-item.addon-message ion-label {\\n  margin: 0;\\n  padding: 8px 0;\\n}\\nion-item.addon-message .addon-message-text {\\n  display: inline-flex;\\n}\\nion-item.addon-message .addon-message-text * {\\n  color: var(--ion-text-color);\\n}\\nion-item.addon-message .tail {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  border: 0.5rem solid transparent;\\n  position: absolute;\\n  touch-action: none;\\n  bottom: 0;\\n  border-bottom-color: var(--message-background);\\n}\\nion-item.addon-message.addon-message-mine {\\n  --message-background: var(--addon-messages-message-mine-bg);\\n  --message-activated-background: var(--addon-messages-message-mine-activated-bg);\\n  --message-alignment: flex-end;\\n}\\nion-item.addon-message.addon-message-mine .spinner {\\n  float: right;\\n  margin-left: 5px;\\n  margin-right: -3px;\\n  margin-top: 2px;\\n  margin-bottom: -2px;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-mine .spinner, :host-context([dir=rtl]) ion-item.addon-message.addon-message-mine .spinner {\\n  float: left;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-mine .spinner {\\n    margin-left: unset;\\n    margin-right: unset;\\n    -webkit-margin-start: 5px;\\n    margin-inline-start: 5px;\\n    -webkit-margin-end: -3px;\\n    margin-inline-end: -3px;\\n  }\\n}\\nion-item.addon-message.addon-message-mine .spinner svg {\\n  width: 16px;\\n  height: 16px;\\n}\\nion-item.addon-message.addon-message-mine .tail {\\n  right: -8px;\\n  margin-right: -0.5rem;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-mine .tail, :host-context([dir=rtl]) ion-item.addon-message.addon-message-mine .tail {\\n  left: unset;\\n  right: unset;\\n  left: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-mine .tail {\\n    margin-right: unset;\\n    -webkit-margin-end: -0.5rem;\\n    margin-inline-end: -0.5rem;\\n  }\\n}\\nion-item.addon-message.addon-message-not-mine .tail {\\n  left: -8px;\\n  margin-left: -0.5rem;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-not-mine .tail, :host-context([dir=rtl]) ion-item.addon-message.addon-message-not-mine .tail {\\n  left: unset;\\n  right: unset;\\n  right: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-not-mine .tail {\\n    margin-left: unset;\\n    -webkit-margin-start: -0.5rem;\\n    margin-inline-start: -0.5rem;\\n  }\\n}\\nion-item.addon-message .addon-messages-delete-button {\\n  min-height: initial;\\n  line-height: initial;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  height: var(--a11y-min-target-size) !important;\\n  align-self: flex-end;\\n}\\nion-item.addon-message .addon-messages-delete-button ion-icon {\\n  font-size: 1.4em;\\n  line-height: initial;\\n  color: var(--danger);\\n}\\nion-item.addon-message.addon-message-no-user {\\n  margin-top: 0px;\\n}\\n:host .addon-mod_chat-notice {\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy90aGVtZS9nbG9iYWxzLnNjc3MiLCJzcmMvdGhlbWUvaGVscGVycy9pb25pYy5mdW5jdGlvbnMuc3RyaW5nLnNjc3MiLCJzcmMvdGhlbWUvaGVscGVycy9pb25pYy5mdW5jdGlvbnMuY29sb3Iuc2NzcyIsInNyYy90aGVtZS9oZWxwZXJzL2lvbmljLm1peGlucy5zY3NzIiwic3JjL3RoZW1lL2hlbHBlcnMvaW9uaWMuY29tcG9uZW50cy5taXhpbnMuc2NzcyIsInNyYy90aGVtZS9oZWxwZXJzL2N1c3RvbS5taXhpbnMuc2NzcyIsInNyYy90aGVtZS9nbG9iYWxzLmN1c3RvbS5zY3NzIiwic3JjL3RoZW1lL2dsb2JhbHMudmFyaWFibGVzLnNjc3MiLCJzcmMvdGhlbWUvY29tcG9uZW50cy9kaXNjdXNzaW9uLnNjc3MiLCJzcmMvYWRkb25zL21vZC9jaGF0L3BhZ2VzL2NoYXQvY2hhdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBQUE7QUNBQTs7Ozs7RUFBQTtBQ0FBOzs7OztFQUFBO0FDQUE7Ozs7O0VBQUE7QUNBQTs7Ozs7O0VBQUE7QUNFQTs7OztFQUFBO0FBa0dBOztFQUFBO0FDcEdBOzs7O0VBQUE7QUNBQTs7OztFQUFBO0FBK0RBOzs7O0VBQUE7QUM1REk7RUFDSSxtQkFBQTtFQUNBLGFBQUE7QUNtRFI7QUQvQ0E7RUFDSSxtREFBQTtFQUNBLHVDQUFBO0FDa0RKO0FEaERJO0VBQ0ksNEJBQUE7QUNrRFI7QUQ5Q0E7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSwrQkFBQTtFQUNBLHFDQUFBO0FDaURKO0FEOUNBO0VBQ0ksbUJBQUE7RUFDQSxpQkFBQTtBQ2lESjtBRDdDQTtFQUNJLHNEQUFBO0VBQ0EsMEVBQUE7RUFDQSwrQkFBQTtFQUVBLFNBQUE7RUFDQSxtQ0FBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtFQUNBLHVDQUFBO0VBQ0EscUNBQUE7RUFDQSxvQ0FBQTtFQUNBLFVBQUE7RUFDQSxxQ0FBQTtFQUNBLHlDQUFBO0VBQ0Esa0JBQUE7RUhtREEsbUNBSmdCO0VHNUNoQixpQkFBQTtBQytDSjtBRDdDSTtFQUNJLHlCQUFBO0VBQ0Esd0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtBQytDUjtBRDVDSTtFQUVJLG1EQUFBO0FDOENSO0FEM0NJO0VBQ0ksZUFBQTtBQzZDUjtBRDFDSTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLGFBQUE7RUFDQSw0QkFBQTtBQzRDUjtBRDFDUTtFQUNJLGNBQUE7RUFDQSxxREFBQTtFQUNBLFNBQUE7QUM0Q1o7QUR6Q1E7RUFDSSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxvQkFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDMkNaO0FEdkNJO0VBQ0ksOENBQUE7RUFDQSx1REFBQTtFQUNBLFNBQUE7RUFDQSxjQUFBO0VBQ0Esc0JBQUE7QUN5Q1I7QUR0Q0k7RUFDSSx5REFBQTtBQ3dDUjtBRHJDSTtFQUNJLFNBQUE7RUFDQSxjQUFBO0FDdUNSO0FEcENJO0VBQ0ksb0JBQUE7QUNzQ1I7QURyQ1E7RUFDSSw0QkFBQTtBQ3VDWjtBRG5DSTtFQUNJLFdBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLGdDQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSw4Q0FBQTtBQ3FDUjtBRGpDSTtFQUNJLDJEQUFBO0VBQ0EsK0VBQUE7RUFDQSw2QkFBQTtBQ21DUjtBRGpDUTtFTHlTRixZQUFBO0VBcExGLGdCS25IeUM7RUxvSHpDLGtCS3BINkI7RUxvSi9CLGVLcEowQjtFTHFKMUIsbUJLckpxQztBQ3NDdkM7QU42Qlc7RUF1T0wsV0FBQTtBTWpRTjtBTjhFTTtFQUNFO0lBRUksa0JBQUE7SUFHQSxtQkFBQTtJQUdGLHlCS2hJbUM7SUxpSW5DLHdCS2pJbUM7SUxrSW5DLHdCS2xJdUI7SUxtSXZCLHVCS25JdUI7RUNtRC9CO0FBQ0Y7QURsRFk7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQ29EaEI7QURoRFE7RUxpTUYsV0toTThCO0VMMkdoQyxxQksxR3lDO0FDa0Q3QztBTk9XO0VBeUlMLFdBQUE7RUFDQSxZQUFBO0VBRUEsVUt0TThCO0FDd0RwQztBTnNETTtFQUNFO0lBS0ksbUJBQUE7SUFLRiwyQkt4SG1DO0lMeUhuQywwQkt6SG1DO0VDOEQzQztBQUNGO0FEM0RJO0VMMExFLFVLekxzQztFTG9HeEMsb0JLbkcrQjtBQzZEbkM7QU5WVztFQXlJTCxXQUFBO0VBQ0EsWUFBQTtFQUdBLFdLak1zQztBQ21FNUM7QU5xQ007RUFDRTtJQUVJLGtCQUFBO0lBTUYsNkJLaEh5QjtJTGlIekIsNEJLakh5QjtFQ3lFakM7QUFDRjtBRHZFSTtFQUNJLG1CQUFBO0VBQ0Esb0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSw4Q0FBQTtFQUNBLG9CQUFBO0FDeUVSO0FEdkVRO0VBQ0ksZ0JBQUE7RUFDQSxvQkFBQTtFQUNBLG9CQUFBO0FDeUVaO0FEckVJO0VBQ0ksZUFBQTtBQ3VFUjtBQS9PSTtFQUNJLGVBQUE7RUFDQSxrQkFBQTtBQWtQUiIsImZpbGUiOiJzcmMvYWRkb25zL21vZC9jaGF0L3BhZ2VzL2NoYXQvY2hhdC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBcHAgR2xvYmFsIHZhcmlhYmxlcyBTQ1NTXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBQbGFjZSBoZXJlIHRoZSBkaWZmZXJlbnQgZmlsZXMgeW91IHNob3VsZCBpbXBvcnQgdG8gdXNlIGdsb2JhbCB2YXJpYWJsZXMuXG4gKi9cblxuJGZvbnQtcGF0aDogXCIuLi9hc3NldHMvZm9udHNcIjtcbiRhc3NldHMtcGF0aDogXCIuLi9hc3NldHNcIjtcblxuQGltcG9ydCBcIi4vaGVscGVycy9oZWxwZXJzLnNjc3NcIjtcbkBpbXBvcnQgXCIuL2dsb2JhbHMuY3VzdG9tLnNjc3NcIjtcbkBpbXBvcnQgXCIuL2dsb2JhbHMudmFyaWFibGVzLnNjc3NcIjtcbiIsIi8qKlxuICogSW1wb3J0ZWQgaW9uaWMgc3RyaW5nIGZ1bmN0aW9ucyBmb3IgU0NTU1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRXh0cmFjdGVkIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljLWZyYW1ld29yay9ibG9iL21hc3Rlci9jb3JlL3NyYy90aGVtZXMvaW9uaWMuZnVuY3Rpb25zLnN0cmluZy5zY3NzXG4gKi9cblxuXG4vLyBTdHJpbmcgVXRpbGl0eSBGdW5jdGlvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFN0cmluZyBSZXBsYWNlIEZ1bmN0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AZnVuY3Rpb24gc3RyLXJlcGxhY2UoJHN0cmluZywgJHNlYXJjaCwgJHJlcGxhY2U6IFwiXCIpIHtcbiAgJGluZGV4OiBzdHItaW5kZXgoJHN0cmluZywgJHNlYXJjaCk7XG5cbiAgQGlmICRpbmRleCB7XG4gICAgQHJldHVybiBzdHItc2xpY2UoJHN0cmluZywgMSwgJGluZGV4IC0gMSkgKyAkcmVwbGFjZSArIHN0ci1yZXBsYWNlKHN0ci1zbGljZSgkc3RyaW5nLCAkaW5kZXggKyBzdHItbGVuZ3RoKCRzZWFyY2gpKSwgJHNlYXJjaCwgJHJlcGxhY2UpO1xuICB9XG5cbiAgQHJldHVybiAkc3RyaW5nO1xufVxuXG4vLyBTdHJpbmcgU3BsaXQgRnVuY3Rpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuQGZ1bmN0aW9uIHN0ci1zcGxpdCgkc3RyaW5nLCAkc2VwYXJhdG9yKSB7XG4gIC8vIGVtcHR5IGFycmF5L2xpc3RcbiAgJHNwbGl0LWFycjogKCk7XG4gIC8vIGZpcnN0IGluZGV4IG9mIHNlcGFyYXRvciBpbiBzdHJpbmdcbiAgJGluZGV4OiBzdHItaW5kZXgoJHN0cmluZywgJHNlcGFyYXRvcik7XG4gIC8vIGxvb3AgdGhyb3VnaCBzdHJpbmdcbiAgQHdoaWxlICRpbmRleCAhPSBudWxsIHtcbiAgICAvLyBnZXQgdGhlIHN1YnN0cmluZyBmcm9tIHRoZSBmaXJzdCBjaGFyYWN0ZXIgdG8gdGhlIHNlcGFyYXRvclxuICAgICRpdGVtOiBzdHItc2xpY2UoJHN0cmluZywgMSwgJGluZGV4IC0gMSk7XG4gICAgLy8gcHVzaCBpdGVtIHRvIGFycmF5XG4gICAgJHNwbGl0LWFycjogYXBwZW5kKCRzcGxpdC1hcnIsICRpdGVtKTtcbiAgICAvLyByZW1vdmUgaXRlbSBhbmQgc2VwYXJhdG9yIGZyb20gc3RyaW5nXG4gICAgJHN0cmluZzogc3RyLXNsaWNlKCRzdHJpbmcsICRpbmRleCArIDEpO1xuICAgIC8vIGZpbmQgbmV3IGluZGV4IG9mIHNlcGFyYXRvclxuICAgICRpbmRleDogc3RyLWluZGV4KCRzdHJpbmcsICRzZXBhcmF0b3IpO1xuICB9XG4gIC8vIGFkZCB0aGUgcmVtYWluaW5nIHN0cmluZyB0byBsaXN0ICh0aGUgbGFzdCBpdGVtKVxuICAkc3BsaXQtYXJyOiBhcHBlbmQoJHNwbGl0LWFyciwgJHN0cmluZyk7XG5cbiAgQHJldHVybiAkc3BsaXQtYXJyO1xufVxuXG5cbi8vIFN0cmluZyBFeHRyYWN0IEZ1bmN0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AZnVuY3Rpb24gc3RyLWV4dHJhY3QoJHN0cmluZywgJHN0YXJ0LCAkZW5kKSB7XG4gICRzdGFydC1pbmRleDogc3RyLWluZGV4KCRzdHJpbmcsICRzdGFydCk7XG5cbiAgQGlmICRzdGFydC1pbmRleCB7XG4gICAgJHBvc3Q6IHN0ci1zbGljZSgkc3RyaW5nLCAkc3RhcnQtaW5kZXggKyBzdHItbGVuZ3RoKCRzdGFydCkpO1xuICAgICRlbmQtaW5kZXg6IHN0ci1pbmRleCgkcG9zdCwgJGVuZCk7XG5cbiAgICBAaWYgJGVuZC1pbmRleCB7XG4gICAgICBAcmV0dXJuIHN0ci1zbGljZSgkcG9zdCwgMSwgJGVuZC1pbmRleCAtIDEpO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gbnVsbDtcbn1cblxuXG4vLyBTdHJpbmcgQ29udGFpbnMgRnVuY3Rpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBmdW5jdGlvbiBzdHItY29udGFpbnMoJHN0cmluZywgJG5lZWRsZSkge1xuICBAaWYgKHR5cGUtb2YoJHN0cmluZykgPT0gc3RyaW5nKSB7XG4gICAgQHJldHVybiBzdHItaW5kZXgoJHN0cmluZywgJG5lZWRsZSkgIT0gbnVsbDtcbiAgfVxuXG4gIEByZXR1cm4gZmFsc2U7XG59XG5cblxuLy8gVVJMIEVuY29kZSBGdW5jdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQGZ1bmN0aW9uIHVybC1lbmNvZGUoJHZhbCkge1xuICAkc3BhY2VzOiBzdHItcmVwbGFjZSgkdmFsLCBcIiBcIiwgXCIlMjBcIik7XG4gICRlbmNvZGVkOiBzdHItcmVwbGFjZSgkc3BhY2VzLCBcIiNcIiwgXCIlMjNcIik7XG4gIEByZXR1cm4gJGVuY29kZWQ7XG59XG5cblxuLy8gQWRkIFJvb3QgU2VsZWN0b3Jcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBBZGRzIGEgcm9vdCBzZWxlY3RvciB1c2luZyBob3N0LWNvbnRleHQgYmFzZWQgb24gdGhlIHNlbGVjdG9yIHBhc3NlZFxuLy9cbi8vIEV4YW1wbGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQGluY2x1ZGUgYWRkLXJvb3Qtc2VsZWN0b3IoXCJbZGlyPXJ0bF1cIiwgXCI6aG9zdFwiKVxuLy8gLS0+IDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKVxuLy9cbi8vIEBpbmNsdWRlIGFkZC1yb290LXNlbGVjdG9yKFwiW2Rpcj1ydGxdXCIsIFwiOmhvc3QoLmZpeGVkKVwiKVxuLy8gLS0+IDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKTpob3N0KC5maXhlZClcbi8vIC0tPiA6aG9zdC1jb250ZXh0KFtkaXI9cnRsXSkuZml4ZWRcbi8vXG4vLyBAaW5jbHVkZSBhZGQtcm9vdC1zZWxlY3RvcihcIltkaXI9cnRsXVwiLCBcIjpob3N0KC50YWItbGF5b3V0LWljb24taGlkZSkgOjpzbG90dGVkKGlvbi1iYWRnZSlcIilcbi8vIC0tPiA6aG9zdC1jb250ZXh0KFtkaXI9cnRsXSkudGFiLWxheW91dC1pY29uLWhpZGUgOjpzbG90dGVkKGlvbi1iYWRnZSlcbi8vXG4vLyBAaW5jbHVkZSBhZGQtcm9vdC1zZWxlY3RvcihcIltkaXI9cnRsXVwiLCBcIi5zaGFkb3dcIilcbi8vIC0tPiBbZGlyPXJ0bF0gLnNoYWRvd1xuLy8gLS0+IDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKSAuc2hhZG93XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AZnVuY3Rpb24gYWRkLXJvb3Qtc2VsZWN0b3IoJHJvb3QsICRhZGRIb3N0U2VsZWN0b3IpIHtcbiAgJHNlbGVjdG9yczogc3RyLXNwbGl0KCRyb290LCBcIixcIik7XG5cbiAgJGxpc3Q6ICgpO1xuXG4gIEBlYWNoICRzZWxlY3RvciBpbiAkc2VsZWN0b3JzIHtcbiAgICAvLyBJZiB0aGUgc2VsZWN0b3IgY29udGFpbnMgOmhvc3QoIGl0IG1lYW5zIGl0IGlzIHRhcmdldGluZyBhIGNsYXNzIG9uIHRoZSBob3N0XG4gICAgLy8gZWxlbWVudCBzbyB3ZSBuZWVkIHRvIGNoYW5nZSBob3cgd2UgdGFyZ2V0IGl0XG4gICAgQGlmIHN0ci1jb250YWlucygkc2VsZWN0b3IsIFwiOmhvc3QoXCIpIHtcbiAgICAgICRzaGFkb3ctZWxlbWVudDogc3RyLXJlcGxhY2UoJHNlbGVjdG9yLCBcIjpob3N0KFwiLCBcIjpob3N0LWNvbnRleHQoI3skYWRkSG9zdFNlbGVjdG9yfSk6aG9zdChcIik7XG4gICAgICAkbGlzdDogYXBwZW5kKCRsaXN0LCAkc2hhZG93LWVsZW1lbnQsIGNvbW1hKTtcblxuICAgICAgJG5ldy1lbGVtZW50OiAoKTtcbiAgICAgICRlbGVtZW50czogc3RyLXNwbGl0KCRzZWxlY3RvciwgXCIgXCIpO1xuXG4gICAgICBAZWFjaCAkZWxlbWVudCBpbiAkZWxlbWVudHMge1xuICAgICAgICBAaWYgc3RyLWNvbnRhaW5zKCRlbGVtZW50LCBcIjpob3N0KFwiKSB7XG4gICAgICAgICAgJHNjb3BlZC1lbGVtZW50OiAkZWxlbWVudDtcblxuICAgICAgICAgIEBpZiBzdHItY29udGFpbnMoJGVsZW1lbnQsIFwiKSlcIikge1xuICAgICAgICAgICAgJHNjb3BlZC1lbGVtZW50OiBzdHItcmVwbGFjZSgkc2NvcGVkLWVsZW1lbnQsIFwiKSlcIiwgXCIpXCIpO1xuICAgICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJHNjb3BlZC1lbGVtZW50OiBzdHItcmVwbGFjZSgkc2NvcGVkLWVsZW1lbnQsIFwiKVwiLCBcIlwiKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgJHNjb3BlZC1lbGVtZW50OiBzdHItcmVwbGFjZSgkc2NvcGVkLWVsZW1lbnQsIFwiOmhvc3QoXCIsIFwiOmhvc3QtY29udGV4dCgjeyRhZGRIb3N0U2VsZWN0b3J9KVwiKTtcblxuICAgICAgICAgICRuZXctZWxlbWVudDogYXBwZW5kKCRuZXctZWxlbWVudCwgJHNjb3BlZC1lbGVtZW50LCBzcGFjZSk7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICRuZXctZWxlbWVudDogYXBwZW5kKCRuZXctZWxlbWVudCwgJGVsZW1lbnQsIHNwYWNlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAkbGlzdDogYXBwZW5kKCRsaXN0LCAkbmV3LWVsZW1lbnQsIGNvbW1hKTtcbiAgICAvLyBJZiB0aGUgc2VsZWN0b3IgY29udGFpbnMgOmhvc3QgaXQgbWVhbnMgaXQgaXMgdGFyZ2V0aW5nIGp1c3QgdGhlIGhvc3RcbiAgICAvLyBlbGVtZW50IHNvIHdlIGNhbiBjaGFuZ2UgaXQgdG8gbG9vayBmb3IgaG9zdC1jb250ZXh0XG4gICAgfSBAZWxzZSBpZiBzdHItY29udGFpbnMoJHNlbGVjdG9yLCBcIjpob3N0XCIpIHtcbiAgICAgICRsaXN0OiBhcHBlbmQoJGxpc3QsIFwiOmhvc3QtY29udGV4dCgjeyRhZGRIb3N0U2VsZWN0b3J9KVwiLCBjb21tYSk7XG4gICAgLy8gSWYgdGhlIHNlbGVjdG9yIGRvZXMgbm90IGNvbnRhaW4gaG9zdCBhdCBhbGwgaXQgaXMgZWl0aGVyIGEgc2hhZG93XG4gICAgLy8gb3Igbm9ybWFsIGVsZW1lbnQgc28gYXBwZW5kIGJvdGggdGhlIGRpciBjaGVjayBhbmQgaG9zdC1jb250ZXh0XG4gICAgfSBAZWxzZSB7XG4gICAgICAkbGlzdDogYXBwZW5kKCRsaXN0LCBcIiN7JGFkZEhvc3RTZWxlY3Rvcn0gI3skc2VsZWN0b3J9XCIsIGNvbW1hKTtcbiAgICAgICRsaXN0OiBhcHBlbmQoJGxpc3QsIFwiOmhvc3QtY29udGV4dCgjeyRhZGRIb3N0U2VsZWN0b3J9KSAjeyRzZWxlY3Rvcn1cIiwgY29tbWEpO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJGxpc3Q7XG59XG4iLCIvKipcbiAqIEltcG9ydGVkIGlvbmljIGNvbG9yIGZ1bmN0aW9ucyBmb3IgU0NTU1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRXh0cmFjdGVkIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljLWZyYW1ld29yay9ibG9iL21hc3Rlci9jb3JlL3NyYy90aGVtZXMvaW9uaWMuZnVuY3Rpb25zLmNvbG9yLnNjc3NcbiAqL1xuXG4vLyBHZXRzIHRoZSBhY3RpdmUgY29sb3IncyBjc3MgdmFyaWFibGUgZnJvbSBhIHZhcmlhdGlvbi4gQWxwaGEgaXMgb3B0aW9uYWwuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRXhhbXBsZSB1c2FnZTpcbi8vIGN1cnJlbnQtY29sb3IoYmFzZSkgPT4gdmFyKC0taW9uLWNvbG9yLWJhc2UpXG4vLyBjdXJyZW50LWNvbG9yKGNvbnRyYXN0LCAwLjEpID0+IHJnYmEodmFyKC0taW9uLWNvbG9yLWNvbnRyYXN0LXJnYiksIDAuMSlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AZnVuY3Rpb24gY3VycmVudC1jb2xvcigkdmFyaWF0aW9uLCAkYWxwaGE6IG51bGwpIHtcbiAgQGlmICRhbHBoYSA9PSBudWxsIHtcbiAgICBAcmV0dXJuIHZhcigtLWlvbi1jb2xvci0jeyR2YXJpYXRpb259KTtcbiAgfSBAZWxzZSB7XG4gICAgQHJldHVybiByZ2JhKHZhcigtLWlvbi1jb2xvci0jeyR2YXJpYXRpb259LXJnYiksICN7JGFscGhhfSk7XG4gIH1cbn1cblxuLy8gR2V0cyB0aGUgc3BlY2lmaWMgY29sb3IncyBjc3MgdmFyaWFibGUgZnJvbSB0aGUgbmFtZSBhbmQgdmFyaWF0aW9uLiBBbHBoYS9yZ2IgYXJlIG9wdGlvbmFsLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEV4YW1wbGUgdXNhZ2U6XG4vLyBpb24tY29sb3IocHJpbWFyeSwgYmFzZSkgPT4gdmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpXG4vLyBpb24tY29sb3Ioc2Vjb25kYXJ5LCBjb250cmFzdCkgPT4gdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeS1jb250cmFzdClcbi8vIGlvbi1jb2xvcihwcmltYXJ5LCBiYXNlLCAwLjUpID0+IHJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLCA1NiwgMTI4LCAyNTUpLCAwLjUpXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGZ1bmN0aW9uIGlvbi1jb2xvcigkbmFtZSwgJHZhcmlhdGlvbiwgJGFscGhhOiBudWxsLCAkcmdiOiBudWxsKSB7XG4gICR2YWx1ZXM6IG1hcC1nZXQoJGNvbG9ycywgJG5hbWUpO1xuICAkdmFsdWU6IG1hcC1nZXQoJHZhbHVlcywgJHZhcmlhdGlvbik7XG4gICR2YXJpYWJsZTogLS1pb24tY29sb3ItI3skbmFtZX0tI3skdmFyaWF0aW9ufTtcblxuICBAaWYgKCR2YXJpYXRpb24gPT0gYmFzZSkge1xuICAgICR2YXJpYWJsZTogLS1pb24tY29sb3ItI3skbmFtZX07XG4gIH1cblxuICBAaWYgKCRhbHBoYSkge1xuICAgICR2YWx1ZTogY29sb3ItdG8tcmdiLWxpc3QoJHZhbHVlKTtcbiAgICBAcmV0dXJuIHJnYmEodmFyKCN7JHZhcmlhYmxlfS1yZ2IsICR2YWx1ZSksICRhbHBoYSk7XG4gIH1cbiAgQGlmICgkcmdiKSB7XG4gICAgJHZhbHVlOiBjb2xvci10by1yZ2ItbGlzdCgkdmFsdWUpO1xuICAgICR2YXJpYWJsZTogI3skdmFyaWFibGV9LXJnYjtcbiAgfVxuXG4gIEByZXR1cm4gdmFyKCN7JHZhcmlhYmxlfSwgJHZhbHVlKTtcbn1cblxuLy8gTWl4ZXMgYSBjb2xvciB3aXRoIGJsYWNrIHRvIGNyZWF0ZSBpdHMgc2hhZGUuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGZ1bmN0aW9uIGdldC1jb2xvci1zaGFkZSgkY29sb3IpIHtcbiAgQHJldHVybiBtaXgoIzAwMCwgJGNvbG9yLCAxMiUpO1xufVxuXG4vLyBNaXhlcyBhIGNvbG9yIHdpdGggd2hpdGUgdG8gY3JlYXRlIGl0cyB0aW50LlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBmdW5jdGlvbiBnZXQtY29sb3ItdGludCgkY29sb3IpIHtcbiAgQHJldHVybiBtaXgoI2ZmZiwgJGNvbG9yLCAxMCUpO1xufVxuXG4vLyBDb252ZXJ0cyBhIGNvbG9yIHRvIGEgY29tbWEgc2VwYXJhdGVkIHJnYi5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AZnVuY3Rpb24gY29sb3ItdG8tcmdiLWxpc3QoJGNvbG9yKSB7XG4gIEByZXR1cm4gI3tyZWQoJGNvbG9yKX0sI3tncmVlbigkY29sb3IpfSwje2JsdWUoJGNvbG9yKX07XG59XG4iLCIvKipcbiAqIEltcG9ydGVkIGlvbmljIG1peGlucyBmb3IgU0NTU1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRXh0cmFjdGVkIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljLWZyYW1ld29yay9ibG9iL21hc3Rlci9jb3JlL3NyYy90aGVtZXMvaW9uaWMubWl4aW5zLnNjc3NcbiAqL1xuXG5AbWl4aW4gaW5wdXQtY292ZXIoKSB7XG4gIEBpbmNsdWRlIHBvc2l0aW9uKDAsIG51bGwsIG51bGwsIDApO1xuICBAaW5jbHVkZSBtYXJnaW4oMCk7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5cbiAgYm9yZGVyOiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG5cbiAgJjo6LW1vei1mb2N1cy1pbm5lciB7XG4gICAgYm9yZGVyOiAwO1xuICB9XG59XG5cbkBtaXhpbiB2aXN1YWxseS1oaWRkZW4oKSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcblxuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG5cbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcblxuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG5cbiAgYm9yZGVyOiAwO1xuICBvdXRsaW5lOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuXG4gIG9wYWNpdHk6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbkBtaXhpbiB0ZXh0LWluaGVyaXQoKSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtc3R5bGU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBsZXR0ZXItc3BhY2luZzogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0O1xuICB0ZXh0LWluZGVudDogaW5oZXJpdDtcbiAgdGV4dC1vdmVyZmxvdzogaW5oZXJpdDtcbiAgdGV4dC10cmFuc2Zvcm06IGluaGVyaXQ7XG4gIHRleHQtYWxpZ246IGluaGVyaXQ7XG4gIHdoaXRlLXNwYWNlOiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuQG1peGluIGJ1dHRvbi1zdGF0ZSgpIHtcbiAgQGluY2x1ZGUgcG9zaXRpb24oMCwgMCwgMCwgMCk7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuXG4gIGNvbnRlbnQ6IFwiXCI7XG5cbiAgb3BhY2l0eTogMDtcbn1cblxuLy8gRm9udCBzbW9vdGhpbmdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBmb250LXNtb290aGluZygpIHtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG59XG5cbi8vIEdldCB0aGUga2V5IGZyb20gYSBtYXAgYmFzZWQgb24gdGhlIGluZGV4XG5AZnVuY3Rpb24gaW5kZXgtdG8ta2V5KCRtYXAsICRpbmRleCkge1xuICAka2V5czogbWFwLWtleXMoJG1hcCk7XG5cbiAgQHJldHVybiBudGgoJGtleXMsICRpbmRleCk7XG59XG5cblxuLy8gQnJlYWtwb2ludCBNaXhpbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLlxuLy9cbi8vIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSwgb3JkZXIgZnJvbSBzbWFsbCB0byBsYXJnZTpcbi8vXG4vLyAgICAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpXG4vL1xuLy8gVGhlIG1hcCBkZWZpbmVkIGluIHRoZSBgJHNjcmVlbi1icmVha3BvaW50c2AgZ2xvYmFsIHZhcmlhYmxlIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1taW4oc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICA1NzZweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRzY3JlZW4tYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcblxuICBAcmV0dXJuIGlmKCRuYW1lICE9IGluZGV4LXRvLWtleSgkYnJlYWtwb2ludHMsIDEpLCAkbWluLCBudWxsKTtcbn1cblxuLy8gUmV0dXJucyBhIGJsYW5rIHN0cmluZyBpZiBzbWFsbGVzdCBicmVha3BvaW50LCBvdGhlcndpc2UgcmV0dXJucyB0aGUgbmFtZSB3aXRoIGEgZGFzaCBpbmZyb250LlxuLy8gVXNlZnVsIGZvciBtYWtpbmcgcmVzcG9uc2l2ZSB1dGlsaXRpZXMuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeCh4cywgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIFwiXCIgIChSZXR1cm5zIGEgYmxhbmsgc3RyaW5nKVxuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIFwiLXNtXCJcbkBmdW5jdGlvbiBicmVha3BvaW50LWluZml4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRzY3JlZW4tYnJlYWtwb2ludHMpIHtcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcbn1cblxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCB3aWRlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRzY3JlZW4tYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWluIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBOYW1lIG9mIHRoZSBuZXh0IGJyZWFrcG9pbnQsIG9yIG51bGwgZm9yIHRoZSBsYXN0IGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICRicmVha3BvaW50LW5hbWVzOiAoeHMgc20gbWQgbGcgeGwpKVxuLy8gICAgbWRcbkBmdW5jdGlvbiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50czogJHNjcmVlbi1icmVha3BvaW50cywgJGJyZWFrcG9pbnQtbmFtZXM6IG1hcC1rZXlzKCRicmVha3BvaW50cykpIHtcbiAgJG46IGluZGV4KCRicmVha3BvaW50LW5hbWVzLCAkbmFtZSk7XG4gIEByZXR1cm4gaWYoJG4gPCBsZW5ndGgoJGJyZWFrcG9pbnQtbmFtZXMpLCBudGgoJGJyZWFrcG9pbnQtbmFtZXMsICRuICsgMSksIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG4vLyBUaGUgbWF4aW11bSB2YWx1ZSBpcyByZWR1Y2VkIGJ5IDAuMDJweCB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2Zcbi8vIGBtaW4tYCBhbmQgYG1heC1gIHByZWZpeGVzIGFuZCB2aWV3cG9ydHMgd2l0aCBmcmFjdGlvbmFsIHdpZHRocy5cbi8vXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XG4vLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXHQvLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXG4vLyBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVx0Ly8gU2VlIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xNzgyNjFcbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1heChtZCwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIDc2Ny45OHB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJHNjcmVlbi1icmVha3BvaW50cykge1xuICAkbWF4OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtYXggYW5kICRtYXggPiAwLCAkbWF4IC0gLjAyLCBudWxsKTtcbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRzY3JlZW4tYnJlYWtwb2ludHMpIHtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWF4IHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5cbi8vIFRleHQgRGlyZWN0aW9uIC0gbHRyIC8gcnRsXG4vL1xuLy8gQ1NTIGRlZmF1bHRzIHRvIHVzZSB0aGUgbHRyIGNzcywgYW5kIGFkZHMgW2Rpcj1ydGxdIHNlbGVjdG9yc1xuLy8gdG8gb3ZlcnJpZGUgbHRyIGRlZmF1bHRzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gbXVsdGktZGlyKCkge1xuICBAY29udGVudDtcblxuICAvLyAkcm9vdDogI3smfTtcbiAgLy8gQGF0LXJvb3QgW2Rpcl0ge1xuICAvLyAgICN7JHJvb3R9IHtcbiAgLy8gICAgIEBjb250ZW50O1xuICAvLyAgIH1cbiAgLy8gfVxufVxuXG5AbWl4aW4gcnRsKCkge1xuICAkcm9vdDogI3smfTtcblxuICBAYXQtcm9vdCAje2FkZC1yb290LXNlbGVjdG9yKCRyb290LCBcIltkaXI9cnRsXVwiKX0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBsdHIoKSB7XG4gIEBjb250ZW50O1xufVxuXG5cbi8vIFNWRyBCYWNrZ3JvdW5kIEltYWdlIE1peGluXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN2Z1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQG1peGluIHN2Zy1iYWNrZ3JvdW5kLWltYWdlKCRzdmcsICRmbGlwLXJ0bDogZmFsc2UpIHtcbiAgJHVybDogdXJsLWVuY29kZSgkc3ZnKTtcbiAgJHZpZXdCb3g6IHN0ci1zcGxpdChzdHItZXh0cmFjdCgkc3ZnLCBcInZpZXdCb3g9J1wiLCBcIidcIiksIFwiIFwiKTtcblxuICBAaWYgJGZsaXAtcnRsICE9IHRydWUgb3IgJHZpZXdCb3ggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmLTgsI3skdXJsfVwiKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgICR0cmFuc2Zvcm06IFwidHJhbnNmb3JtPSd0cmFuc2xhdGUoI3tudGgoJHZpZXdCb3gsIDMpfSwgMCkgc2NhbGUoLTEsIDEpJ1wiO1xuICAgICRmbGlwcGVkLXVybDogJHN2ZztcbiAgICAkZmxpcHBlZC11cmw6IHN0ci1yZXBsYWNlKCRmbGlwcGVkLXVybCwgXCI8cGF0aFwiLCBcIjxwYXRoICN7JHRyYW5zZm9ybX1cIik7XG4gICAgJGZsaXBwZWQtdXJsOiBzdHItcmVwbGFjZSgkZmxpcHBlZC11cmwsIFwiPGxpbmVcIiwgXCI8bGluZSAjeyR0cmFuc2Zvcm19XCIpO1xuICAgICRmbGlwcGVkLXVybDogc3RyLXJlcGxhY2UoJGZsaXBwZWQtdXJsLCBcIjxwb2x5Z29uXCIsIFwiPHBvbHlnb24gI3skdHJhbnNmb3JtfVwiKTtcbiAgICAkZmxpcHBlZC11cmw6IHVybC1lbmNvZGUoJGZsaXBwZWQtdXJsKTtcblxuICAgIEBpbmNsdWRlIGx0ciAoKSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGYtOCwjeyR1cmx9XCIpO1xuICAgIH1cbiAgICBAaW5jbHVkZSBydGwoKSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGYtOCwjeyRmbGlwcGVkLXVybH1cIik7XG4gICAgfVxuICB9XG59XG5cbi8vIEFkZCBwcm9wZXJ0eSBob3Jpem9udGFsXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQG1peGluIHByb3BlcnR5LWhvcml6b250YWwoJHByb3AsICRzdGFydCwgJGVuZDogJHN0YXJ0KSB7XG4gIEBpZiAkc3RhcnQgPT0gMCBhbmQgJGVuZCA9PSAwIHtcbiAgICAjeyRwcm9wfS1sZWZ0OiAkc3RhcnQ7XG4gICAgI3skcHJvcH0tcmlnaHQ6ICRlbmQ7XG5cbiAgfSBAZWxzZSB7XG4gICAgI3skcHJvcH0tbGVmdDogJHN0YXJ0O1xuICAgICN7JHByb3B9LXJpZ2h0OiAkZW5kO1xuXG4gICAgQGF0LXJvb3Qge1xuICAgICAgQHN1cHBvcnRzICgobWFyZ2luLWlubGluZS1zdGFydDogMCkgb3IgKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSkge1xuICAgICAgICAmIHtcbiAgICAgICAgICBAaWYgJHN0YXJ0ICE9IG51bGwge1xuICAgICAgICAgICAgI3skcHJvcH0tbGVmdDogdW5zZXQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIEBpZiAkZW5kICE9IG51bGwge1xuICAgICAgICAgICAgI3skcHJvcH0tcmlnaHQ6IHVuc2V0O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC13ZWJraXQtI3skcHJvcH0tc3RhcnQ6ICRzdGFydDtcbiAgICAgICAgICAjeyRwcm9wfS1pbmxpbmUtc3RhcnQ6ICRzdGFydDtcbiAgICAgICAgICAtd2Via2l0LSN7JHByb3B9LWVuZDogJGVuZDtcbiAgICAgICAgICAjeyRwcm9wfS1pbmxpbmUtZW5kOiAkZW5kO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIEFkZCBwcm9wZXJ0eSBmb3IgYWxsIGRpcmVjdGlvbnNcbi8vIEBwYXJhbSB7c3RyaW5nfSAkcHJvcFxuLy8gQHBhcmFtIHtzdHJpbmd9ICR0b3Bcbi8vIEBwYXJhbSB7c3RyaW5nfSAkZW5kXG4vLyBAcGFyYW0ge3N0cmluZ30gJGJvdHRvbVxuLy8gQHBhcmFtIHtzdHJpbmd9ICRzdGFydFxuLy8gQHBhcmFtIHtib29sZWFufSAkY29udGVudCBpbmNsdWRlIGNvbnRlbnQgb3IgdXNlIGRlZmF1bHRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBtaXhpbiBwcm9wZXJ0eSgkcHJvcCwgJHRvcCwgJGVuZDogJHRvcCwgJGJvdHRvbTogJHRvcCwgJHN0YXJ0OiAkZW5kKSB7XG4gIEBpbmNsdWRlIHByb3BlcnR5LWhvcml6b250YWwoJHByb3AsICRzdGFydCwgJGVuZCk7XG4gICN7JHByb3B9LXRvcDogJHRvcDtcbiAgI3skcHJvcH0tYm90dG9tOiAkYm90dG9tO1xufVxuXG4vLyBBZGQgcGFkZGluZyBob3Jpem9udGFsXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQG1peGluIHBhZGRpbmctaG9yaXpvbnRhbCgkc3RhcnQsICRlbmQ6ICRzdGFydCkge1xuICBAaW5jbHVkZSBwcm9wZXJ0eS1ob3Jpem9udGFsKHBhZGRpbmcsICRzdGFydCwgJGVuZCk7XG59XG5cbi8vIEFkZCBwYWRkaW5nIGZvciBhbGwgZGlyZWN0aW9uc1xuLy8gQHBhcmFtIHtzdHJpbmd9ICR0b3Bcbi8vIEBwYXJhbSB7c3RyaW5nfSAkZW5kXG4vLyBAcGFyYW0ge3N0cmluZ30gJGJvdHRvbVxuLy8gQHBhcmFtIHtzdHJpbmd9ICRzdGFydFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQG1peGluIHBhZGRpbmcoJHRvcCwgJGVuZDogJHRvcCwgJGJvdHRvbTogJHRvcCwgJHN0YXJ0OiAkZW5kKSB7XG4gIEBpbmNsdWRlIHByb3BlcnR5KHBhZGRpbmcsICR0b3AsICRlbmQsICRib3R0b20sICRzdGFydCk7XG59XG5cbi8vIEFkZCBtYXJnaW4gaG9yaXpvbnRhbFxuLy8gQHBhcmFtIHtzdHJpbmd9ICRzdGFydFxuLy8gQHBhcmFtIHtzdHJpbmd9ICRlbmRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBtaXhpbiBtYXJnaW4taG9yaXpvbnRhbCgkc3RhcnQsICRlbmQ6ICRzdGFydCkge1xuICBAaW5jbHVkZSBwcm9wZXJ0eS1ob3Jpem9udGFsKG1hcmdpbiwgJHN0YXJ0LCAkZW5kKTtcbn1cblxuLy8gQWRkIG1hcmdpbiBmb3IgYWxsIGRpcmVjdGlvbnNcbi8vIEBwYXJhbSB7c3RyaW5nfSAkdG9wXG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxuLy8gQHBhcmFtIHtzdHJpbmd9ICRib3R0b21cbi8vIEBwYXJhbSB7c3RyaW5nfSAkc3RhcnRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBtaXhpbiBtYXJnaW4oJHRvcCwgJGVuZDogJHRvcCwgJGJvdHRvbTogJHRvcCwgJHN0YXJ0OiAkZW5kKSB7XG4gIEBpbmNsdWRlIHByb3BlcnR5KG1hcmdpbiwgJHRvcCwgJGVuZCwgJGJvdHRvbSwgJHN0YXJ0KTtcbn1cblxuLy8gQWRkIHBvc2l0aW9uIGhvcml6b250YWxcbi8vIEBwYXJhbSB7c3RyaW5nfSAkc3RhcnQgLSBhbW91bnQgdG8gcG9zaXRpb24gc3RhcnRcbi8vIEBwYXJhbSB7c3RyaW5nfSAkZW5kIC0gYW1vdW50IHRvIGxlZnQ6IDA7IGVuZFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQG1peGluIHBvc2l0aW9uLWhvcml6b250YWwoJHN0YXJ0OiBudWxsLCAkZW5kOiBudWxsKSB7XG4gIEBpZiAkc3RhcnQgPT0gJGVuZCB7XG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xuICAgICAgbGVmdDogJHN0YXJ0O1xuICAgICAgcmlnaHQ6ICRlbmQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaW5jbHVkZSBsdHIoKSB7XG4gICAgICBsZWZ0OiAkc3RhcnQ7XG4gICAgICByaWdodDogJGVuZDtcbiAgICB9XG4gICAgQGluY2x1ZGUgcnRsKCkge1xuICAgICAgbGVmdDogdW5zZXQ7XG4gICAgICByaWdodDogdW5zZXQ7XG5cbiAgICAgIGxlZnQ6ICRlbmQ7XG4gICAgICByaWdodDogJHN0YXJ0O1xuICAgIH1cbiAgfVxufVxuXG4vLyBBZGQgcG9zaXRpb24gZm9yIGFsbCBkaXJlY3Rpb25zXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcFxuLy8gQHBhcmFtIHtzdHJpbmd9ICRlbmRcbi8vIEBwYXJhbSB7c3RyaW5nfSAkYm90dG9tXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AbWl4aW4gcG9zaXRpb24oJHRvcDogbnVsbCwgJGVuZDogbnVsbCwgJGJvdHRvbTogbnVsbCwgJHN0YXJ0OiBudWxsKSB7XG4gIEBpbmNsdWRlIHBvc2l0aW9uLWhvcml6b250YWwoJHN0YXJ0LCAkZW5kKTtcbiAgdG9wOiAkdG9wO1xuICBib3R0b206ICRib3R0b207XG59XG5cbi8vIEFkZCBib3JkZXIgZm9yIGFsbCBkaXJlY3Rpb25zXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcFxuLy8gQHBhcmFtIHtzdHJpbmd9ICRlbmRcbi8vIEBwYXJhbSB7c3RyaW5nfSAkYm90dG9tXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AbWl4aW4gYm9yZGVyKCR0b3AsICRlbmQ6ICR0b3AsICRib3R0b206ICR0b3AsICRzdGFydDogJGVuZCkge1xuICBAaW5jbHVkZSBwcm9wZXJ0eShib3JkZXIsICR0b3AsICRlbmQsICRib3R0b20sICRzdGFydCk7XG59XG5cbi8vIEFkZCBib3JkZXIgcmFkaXVzIGZvciBhbGwgZGlyZWN0aW9uc1xuLy8gQHBhcmFtIHtzdHJpbmd9ICR0b3Atc3RhcnRcbi8vIEBwYXJhbSB7c3RyaW5nfSAkdG9wLWVuZFxuLy8gQHBhcmFtIHtzdHJpbmd9ICRib3R0b20tZW5kXG4vLyBAcGFyYW0ge3N0cmluZ30gJGJvdHRvbS1zdGFydFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQG1peGluIGJvcmRlci1yYWRpdXMoJHRvcC1zdGFydCwgJHRvcC1lbmQ6ICR0b3Atc3RhcnQsICRib3R0b20tZW5kOiAkdG9wLXN0YXJ0LCAkYm90dG9tLXN0YXJ0OiAkdG9wLWVuZCkge1xuICBAaWYgJHRvcC1zdGFydCA9PSAkdG9wLWVuZCBhbmQgJHRvcC1zdGFydCA9PSAkYm90dG9tLWVuZCBhbmQgJHRvcC1zdGFydCA9PSAkYm90dG9tLXN0YXJ0IHtcbiAgICBAaW5jbHVkZSBtdWx0aS1kaXIoKSB7XG4gICAgICBib3JkZXItcmFkaXVzOiAkdG9wLXN0YXJ0O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGluY2x1ZGUgbHRyKCkge1xuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHRvcC1zdGFydDtcbiAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAkdG9wLWVuZDtcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkYm90dG9tLWVuZDtcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICRib3R0b20tc3RhcnQ7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgcnRsKCkge1xuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHRvcC1lbmQ7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHRvcC1zdGFydDtcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkYm90dG9tLXN0YXJ0O1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJGJvdHRvbS1lbmQ7XG4gICAgfVxuICB9XG59XG5cbi8vIEFkZCBkaXJlY3Rpb24gZm9yIGFsbCBkaXJlY3Rpb25zXG4vLyBAcGFyYW0ge3N0cmluZ30gJGRpciAtIERpcmVjdGlvbiBvbiBMVFJcbkBtaXhpbiBkaXJlY3Rpb24oJGRpcikge1xuICAkb3RoZXItZGlyOiBudWxsO1xuXG4gIEBpZiAkZGlyID09IGx0ciB7XG4gICAgJG90aGVyLWRpcjogcnRsO1xuICB9IEBlbHNlIHtcbiAgICAkb3RoZXItZGlyOiBsdHI7XG4gIH1cblxuICBAaW5jbHVkZSBsdHIoKSB7XG4gICAgZGlyZWN0aW9uOiAkZGlyO1xuICB9XG4gIEBpbmNsdWRlIHJ0bCgpIHtcbiAgICBkaXJlY3Rpb246ICRvdGhlci1kaXI7XG4gIH1cbn1cblxuLy8gQWRkIGZsb2F0IGZvciBhbGwgZGlyZWN0aW9uc1xuLy8gQHBhcmFtIHtzdHJpbmd9ICRzaWRlXG4vLyBAcGFyYW0ge3N0cmluZ30gJGRlY29yYXRvciAtICFpbXBvcnRhbnRcbkBtaXhpbiBmbG9hdCgkc2lkZSwgJGRlY29yYXRvcjogbnVsbCkge1xuICBAaWYgJHNpZGUgPT0gc3RhcnQge1xuICAgIEBpbmNsdWRlIGx0cigpIHtcbiAgICAgIGZsb2F0OiBsZWZ0ICRkZWNvcmF0b3I7XG4gICAgfVxuICAgIEBpbmNsdWRlIHJ0bCgpIHtcbiAgICAgIGZsb2F0OiByaWdodCAkZGVjb3JhdG9yO1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkc2lkZSA9PSBlbmQge1xuICAgIEBpbmNsdWRlIGx0cigpIHtcbiAgICAgIGZsb2F0OiByaWdodCAkZGVjb3JhdG9yO1xuICAgIH1cbiAgICBAaW5jbHVkZSBydGwoKSB7XG4gICAgICBmbG9hdDogbGVmdCAkZGVjb3JhdG9yO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xuICAgICAgZmxvYXQ6ICRzaWRlICRkZWNvcmF0b3I7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBiYWNrZ3JvdW5kLXBvc2l0aW9uKCRob3Jpem9udGFsLCAkaG9yaXpvbnRhbC1hbW91bnQ6IG51bGwsICR2ZXJ0aWNhbDogbnVsbCwgJHZlcnRpY2FsLWFtb3VudDogbnVsbCkge1xuICBAaWYgJGhvcml6b250YWwgPT0gc3RhcnQgb3IgJGhvcml6b250YWwgPT0gZW5kIHtcbiAgICAkaG9yaXpvbnRhbC1sdHI6IG51bGw7XG4gICAgJGhvcml6b250YWwtcnRsOiBudWxsO1xuICAgIEBpZiAkaG9yaXpvbnRhbCA9PSBzdGFydCB7XG4gICAgICAkaG9yaXpvbnRhbC1sdHI6IGxlZnQ7XG4gICAgICAkaG9yaXpvbnRhbC1ydGw6IHJpZ2h0O1xuICAgIH0gQGVsc2Uge1xuICAgICAgJGhvcml6b250YWwtbHRyOiByaWdodDtcbiAgICAgICRob3Jpem9udGFsLXJ0bDogbGVmdDtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBsdHIoKSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAkaG9yaXpvbnRhbC1sdHIgJGhvcml6b250YWwtYW1vdW50ICR2ZXJ0aWNhbCAkdmVydGljYWwtYW1vdW50O1xuICAgIH1cbiAgICBAaW5jbHVkZSBydGwoKSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAkaG9yaXpvbnRhbC1ydGwgJGhvcml6b250YWwtYW1vdW50ICR2ZXJ0aWNhbCAkdmVydGljYWwtYW1vdW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogJGhvcml6b250YWwgJGhvcml6b250YWwtYW1vdW50ICR2ZXJ0aWNhbCAkdmVydGljYWwtYW1vdW50O1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gdHJhbnNmb3JtLW9yaWdpbigkeC1heGlzLCAkeS1heGlzOiBudWxsKSB7XG4gIEBpZiAkeC1heGlzID09IHN0YXJ0IHtcbiAgICBAaW5jbHVkZSBsdHIoKSB7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0ICR5LWF4aXM7XG4gICAgfVxuICAgIEBpbmNsdWRlIHJ0bCgpIHtcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0ICR5LWF4aXM7XG4gICAgfVxuICB9IEBlbHNlIGlmICR4LWF4aXMgPT0gZW5kIHtcbiAgICBAaW5jbHVkZSBsdHIoKSB7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCAkeS1heGlzO1xuICAgIH1cbiAgICBAaW5jbHVkZSBydGwoKSB7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0ICR5LWF4aXM7XG4gICAgfVxuICB9IEBlbHNlIGlmICR4LWF4aXMgPT0gbGVmdCBvciAkeC1heGlzID09IHJpZ2h0IHtcbiAgICBAaW5jbHVkZSBtdWx0aS1kaXIoKSB7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAkeC1heGlzICR5LWF4aXM7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaW5jbHVkZSBsdHIoKSB7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAkeC1heGlzICR5LWF4aXM7XG4gICAgfVxuICAgIEBpbmNsdWRlIHJ0bCgpIHtcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGNhbGMoMTAwJSAtICN7JHgtYXhpc30pICR5LWF4aXM7XG4gICAgfVxuICB9XG59XG5cbi8vIEFkZCB0cmFuc2Zvcm0gZm9yIGFsbCBkaXJlY3Rpb25zXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRyYW5zZm9ybXMgLSBjb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiB0cmFuc2Zvcm1zXG5AbWl4aW4gdHJhbnNmb3JtKCR0cmFuc2Zvcm1zLi4uKSB7XG4gICRleHRyYTogbnVsbDtcblxuICAkeDogbnVsbDtcbiAgJGx0ci10cmFuc2xhdGU6IG51bGw7XG4gICRydGwtdHJhbnNsYXRlOiBudWxsO1xuXG4gIEBlYWNoICR0cmFuc2Zvcm0gaW4gJHRyYW5zZm9ybXMge1xuICAgIEBpZiAoc3RyLWluZGV4KCR0cmFuc2Zvcm0sIHRyYW5zbGF0ZTNkKSkge1xuICAgICAgJHRyYW5zZm9ybTogc3RyLXJlcGxhY2UoJHRyYW5zZm9ybSwgJ3RyYW5zbGF0ZTNkKCcpO1xuICAgICAgJHRyYW5zZm9ybTogc3RyLXJlcGxhY2UoJHRyYW5zZm9ybSwgJyknKTtcblxuICAgICAgJGNvb3JkaW5hdGVzOiBzdHItc3BsaXQoJHRyYW5zZm9ybSwgJywnKTtcblxuICAgICAgJHg6IG50aCgkY29vcmRpbmF0ZXMsIDEpO1xuICAgICAgJHk6IG50aCgkY29vcmRpbmF0ZXMsIDIpO1xuICAgICAgJHo6IG50aCgkY29vcmRpbmF0ZXMsIDMpO1xuXG4gICAgICAkbHRyLXRyYW5zbGF0ZTogdHJhbnNsYXRlM2QoJHgsICR5LCAkeik7XG4gICAgICAkcnRsLXRyYW5zbGF0ZTogdHJhbnNsYXRlM2QoY2FsYygtMSAqICN7JHh9KSwgJHksICR6KTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIEBpZiAkZXh0cmEgPT0gbnVsbCB7XG4gICAgICAgICRleHRyYTogJHRyYW5zZm9ybTtcbiAgICAgIH0gQGVsc2Uge1xuICAgICAgICAkZXh0cmE6ICRleHRyYSAkdHJhbnNmb3JtO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiAkeCA9PSAnMCcgb3IgJHggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xuICAgICAgdHJhbnNmb3JtOiAkbHRyLXRyYW5zbGF0ZSAkZXh0cmE7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaW5jbHVkZSBsdHIoKSB7XG4gICAgICB0cmFuc2Zvcm06ICRsdHItdHJhbnNsYXRlICRleHRyYTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBydGwoKSB7XG4gICAgICB0cmFuc2Zvcm06ICRydGwtdHJhbnNsYXRlICRleHRyYTtcbiAgICB9XG4gIH1cbn1cbiIsIi8qKlxuICogSW1wb3J0ZWQgaW9uaWMgbWl4aW5zIGZvciBTQ1NTIGZyb20gZGlmZmVyZW50IGNvbXBvbmVudHNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEV4dHJhY3RlZCBmcm9tXG4gKiBodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9pb25pYy1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvY29yZS9zcmMvY29tcG9uZW50cy9ncmlkL2dyaWQubWl4aW5zLnNjc3NcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljLWZyYW1ld29yay9ibG9iL21hc3Rlci9jb3JlL3NyYy9jb21wb25lbnRzL2l0ZW0vaXRlbS5taXhpbnMuc2Nzc1xuICovXG5cbi8vIFJlc3BvbnNpdmUgTWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIENyZWF0ZXMgYSBmaXhlZCB3aWR0aCBmb3IgdGhlIGdyaWQgYmFzZWQgb24gdGhlIHNjcmVlbiBzaXplXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIG1ha2UtZ3JpZC13aWR0aHMoJHdpZHRoczogJGdyaWQtd2lkdGhzLCAkYnJlYWtwb2ludHM6ICRzY3JlZW4tYnJlYWtwb2ludHMpIHtcbiAgQGVhY2ggJGJyZWFrcG9pbnQsICR3aWR0aCBpbiAkd2lkdGhzIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50LCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIHdpZHRoOiAkd2lkdGg7XG4gICAgfVxuICB9XG5cbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5cbi8vIEFkZHMgcGFkZGluZyB0byB0aGUgZWxlbWVudCBiYXNlZCBvbiBicmVha3BvaW50c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBtYWtlLWJyZWFrcG9pbnQtcGFkZGluZygkcGFkZGluZ3MpIHtcbiAgQGVhY2ggJGJyZWFrcG9pbnQgaW4gbWFwLWtleXMoJHBhZGRpbmdzKSB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCkge1xuICAgICAgJHBhZGRpbmc6IG1hcC1nZXQoJHBhZGRpbmdzLCAkYnJlYWtwb2ludCk7XG5cbiAgICAgIEBpbmNsdWRlIHBhZGRpbmcoJHBhZGRpbmcpO1xuICAgIH1cbiAgfVxufVxuXG5cbi8vIEl0ZW0gTWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gaXRlbS1wdXNoLXN2Zy11cmwoJGZpbGwpIHtcbiAgJGl0ZW0tZGV0YWlsLXB1c2gtc3ZnOiBcIjxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTIgMjAnPjxwYXRoIGQ9J00yLDIwbC0yLTJsOC04TDAsMmwyLTJsMTAsMTBMMiwyMHonIGZpbGw9JyN7JGZpbGx9Jy8+PC9zdmc+XCI7XG5cbiAgQGluY2x1ZGUgc3ZnLWJhY2tncm91bmQtaW1hZ2UoJGl0ZW0tZGV0YWlsLXB1c2gtc3ZnLCB0cnVlKTtcbn1cbiIsIkB1c2UgXCJzYXNzOm1hdGhcIiBhcyBtYXRoO1xuXG4vKipcbiAqIEFwcCBjdXN0b20gbWl4aW5zIGZvciBTQ1NTXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBQbGFjZSBoZXJlIG91ciBjdXN0b20gbWl4aW5zLlxuICovXG5cbi8vIE1peGVzIGEgY29sb3Igd2l0aCBibGFjayB0byBjcmVhdGUgaXRzIHNoYWRlLlxuLy8gRGVmYXVsdCB0byBib290c3RyYXAgbGV2ZWwgNi5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AZnVuY3Rpb24gZ2V0LWNvbG9yLXNoYWRlLXBlcmNlbnQoJGNvbG9yLCAkcGVyY2VudDogNDglKSB7XG4gICAgQHJldHVybiBtaXgoIzAwMCwgJGNvbG9yLCAkcGVyY2VudCk7XG4gIH1cblxuICAvLyBNaXhlcyBhIGNvbG9yIHdpdGggd2hpdGUgdG8gY3JlYXRlIGl0cyB0aW50LlxuICAvLyBEZWZhdWx0IHRvIGJvb3RzdHJhcCBsZXZlbCAtMTAuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIEBmdW5jdGlvbiBnZXQtY29sb3ItdGludC1wZXJjZW50KCRjb2xvciwgJHBlcmNlbnQ6IDgwJSkge1xuICAgIEByZXR1cm4gbWl4KCNmZmYsICRjb2xvciwgJHBlcmNlbnQpO1xuICB9XG5cbiAgLy8gSW9uaWMgQ29sb3JzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEdlbmVyYXRlcyB0aGUgY29sb3IgY2xhc3NlcyBhbmQgdmFyaWFibGVzIGJhc2VkIG9uIHRoZVxuICAvLyBjb2xvcnMgbWFwXG5cbiAgQG1peGluIGdlbmVyYXRlLWNvbG9yKCRjb2xvci1uYW1lLCAkY29sb3JzKSB7XG4gICAgICAkYmFzZTogbWFwLWdldCgkY29sb3JzLCAkY29sb3ItbmFtZSk7XG4gICAgICAkbGlnaHQ6IG1hcC1nZXQoJGJhc2UsICdsaWdodCcpO1xuXG4gICAgICBAaW5jbHVkZSBnZW5lcmF0ZS1jb2xvci12YXJpYW50cygkY29sb3ItbmFtZSwgJGxpZ2h0KTtcblxuICAgICAgYm9keS5kYXJrIHtcbiAgICAgICAgICAkZGFyazogbWFwLWdldCgkYmFzZSwgJ2RhcmsnKTtcbiAgICAgICAgICAkZGFyazogbWl4KCRsaWdodCwgd2hpdGUsIDgwJSkgIWRlZmF1bHQ7XG4gICAgICAgICAgQGluY2x1ZGUgZ2VuZXJhdGUtY29sb3ItdmFyaWFudHMoJGNvbG9yLW5hbWUsICRkYXJrKTtcbiAgICAgIH1cbiAgfVxuXG4gIEBtaXhpbiBnZW5lcmF0ZS1jb2xvci12YXJpYW50cygkY29sb3ItbmFtZSwgJGJhc2UpIHtcbiAgICAgICRjb250cmFzdDogZ2V0X2NvbnRyYXN0X2NvbG9yKCRiYXNlKTtcbiAgICAgICRzaGFkZTogZ2V0LWNvbG9yLXNoYWRlLXBlcmNlbnQoJGJhc2UpO1xuICAgICAgJHRpbnQ6IGdldC1jb2xvci10aW50LXBlcmNlbnQoJGJhc2UpO1xuXG4gICAgICAtLSN7JGNvbG9yLW5hbWV9OiAjeyRiYXNlfTtcbiAgICAgIC0tI3skY29sb3ItbmFtZX0tc2hhZGU6ICN7JHNoYWRlfTtcbiAgICAgIC0tI3skY29sb3ItbmFtZX0tdGludDogI3skdGludH07XG4gICAgICAtLSN7JGNvbG9yLW5hbWV9LWNvbnRyYXN0OiAjeyRjb250cmFzdH07XG5cbiAgICAgIC8vIEludGVybmFsIGlvbmljIHVzZSBvbmx5LlxuICAgICAgLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX06IHZhcigtLSN7JGNvbG9yLW5hbWV9KTtcbiAgICAgIC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LWJhc2U6IHZhcigtLWlvbi1jb2xvci0jeyRjb2xvci1uYW1lfSk7XG4gICAgICAtLWlvbi1jb2xvci0jeyRjb2xvci1uYW1lfS1yZ2I6ICN7Y29sb3ItdG8tcmdiLWxpc3QoJGJhc2UpfTtcbiAgICAgIC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LWNvbnRyYXN0OiAjeyRjb250cmFzdH07XG4gICAgICAtLWlvbi1jb2xvci0jeyRjb2xvci1uYW1lfS1jb250cmFzdC1yZ2I6ICN7Y29sb3ItdG8tcmdiLWxpc3QoJGNvbnRyYXN0KX07XG4gICAgICAtLWlvbi1jb2xvci0jeyRjb2xvci1uYW1lfS1zaGFkZTogI3skc2hhZGV9O1xuICAgICAgLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tdGludDogI3skdGludH07XG5cbiAgICAgIC5pb24tY29sb3ItI3skY29sb3ItbmFtZX0ge1xuICAgICAgICAgIC0taW9uLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0pO1xuICAgICAgICAgIC0taW9uLWNvbG9yLWJhc2U6IHZhcigtLWlvbi1jb2xvci0jeyRjb2xvci1uYW1lfS1iYXNlKTtcbiAgICAgICAgICAtLWlvbi1jb2xvci1yZ2I6IHZhcigtLWlvbi1jb2xvci0jeyRjb2xvci1uYW1lfS1yZ2IpO1xuICAgICAgICAgIC0taW9uLWNvbG9yLWNvbnRyYXN0OiB2YXIoLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tY29udHJhc3QpO1xuICAgICAgICAgIC0taW9uLWNvbG9yLWNvbnRyYXN0LXJnYjogdmFyKC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LWNvbnRyYXN0LXJnYik7XG4gICAgICAgICAgLS1pb24tY29sb3Itc2hhZGU6IHZhcigtLWlvbi1jb2xvci0jeyRjb2xvci1uYW1lfS1zaGFkZSk7XG4gICAgICAgICAgLS1pb24tY29sb3ItdGludDogdmFyKC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LXRpbnQpO1xuICAgICAgfVxuICB9XG5cblxuIEBtaXhpbiBjb3JlLWZvY3VzKCkge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6OmFmdGVyIHtcbiAgICAgICAgQGluY2x1ZGUgcG9zaXRpb24oMCwgMCwgMCwgMCk7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgQGluY2x1ZGUgY29yZS1mb2N1cy1zdHlsZSgpO1xuICAgIH1cbiB9XG5cbiBAbWl4aW4gY29yZS1mb2N1cy1zdHlsZSgpIHtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgdmFyKC0tYTExeS1mb2N1cy13aWR0aCkgMXB4IHZhcigtLWExMXktZm9jdXMtY29sb3IpO1xuICAgIC8vIFRoaWNrZXIgb3B0aW9uOlxuICAgIC8vIGJvcmRlcjogdmFyKC0tYTExeS1mb2N1cy13aWR0aCkgc29saWQgdmFyKC0tYTExeS1mb2N1cy1jb2xvcik7XG59XG5cbkBtaXhpbiBjb3JlLXRyYW5zaXRpb24oJHByb3BlcnRpZXM6IGFsbCwgJGR1cmF0aW9uOiA1MDBtcywgJHRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQpIHtcbiAgICAkdHJhbnNpdGlvbnM6ICgpO1xuICAgIEBlYWNoICRwcm9wZXJ0eSBpbiAkcHJvcGVydGllcyB7XG4gICAgICAkdHJhbnNpdGlvbnM6IGFwcGVuZCgkdHJhbnNpdGlvbnMsICRwcm9wZXJ0eSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbiwgY29tbWEpO1xuICAgIH1cblxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogJHRyYW5zaXRpb25zO1xuICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9ucztcbn1cblxuLyoqXG4gKiBTYW1lIGFzIGl0ZW0tcHVzaC1zdmctdXJsIGJ1dCBhZG1pdHMgZmxpcC1ydGxcbiAqL1xuQG1peGluIHB1c2gtYXJyb3ctY29sb3IoJGZpbGw6IDYyNjI2MiwgJGZsaXAtcnRsOiBmYWxzZSkge1xuICAgICRpdGVtLWRldGFpbC1wdXNoLXN2ZzogXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDEyIDIwJz48cGF0aCBkPSdNMiwyMGwtMi0ybDgtOEwwLDJsMi0ybDEwLDEwTDIsMjB6JyBmaWxsPScjeyRmaWxsfScvPjwvc3ZnPlwiO1xuXG4gICAgQGluY2x1ZGUgc3ZnLWJhY2tncm91bmQtaW1hZ2UoJGl0ZW0tZGV0YWlsLXB1c2gtc3ZnLCAkZmxpcC1ydGwpO1xufVxuXG5AbWl4aW4gYm9yZGVyLXN0YXJ0KCRweCwgJHR5cGU6IG51bGwsICRjb2xvcjogbnVsbCkge1xuICAgIEBpbmNsdWRlIHByb3BlcnR5LWhvcml6b250YWwoYm9yZGVyLCAkcHggJHR5cGUgJGNvbG9yLCBudWxsKTtcbn1cblxuQG1peGluIGJvcmRlci1lbmQoJHB4LCAkdHlwZTogbnVsbCwgJGNvbG9yOiBudWxsKSB7XG4gICAgQGluY2x1ZGUgcHJvcGVydHktaG9yaXpvbnRhbChib3JkZXIsIG51bGwsICRweCAkdHlwZSAkY29sb3IpO1xufVxuXG5AbWl4aW4gc2FmZS1hcmVhLWJvcmRlci1zdGFydCgkcHgsICR0eXBlLCAkY29sb3IpIHtcbiAgICAkc2FmZS1hcmVhLXBvc2l0aW9uOiBjYWxjKHZhcigtLWlvbi1zYWZlLWFyZWEtbGVmdCkgKyAjeyRweH0pO1xuXG4gICAgQGluY2x1ZGUgYm9yZGVyLXN0YXJ0KCRzYWZlLWFyZWEtcG9zaXRpb24sICR0eXBlLCAkY29sb3IpO1xufVxuXG5AbWl4aW4gc2FmZS1hcmVhLWJvcmRlci1lbmQoJHB4LCAkdHlwZSwgJGNvbG9yKSB7XG4gICAgJHNhZmUtYXJlYS1wb3NpdGlvbjogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLXJpZ2h0KSArICN7JHB4fSk7XG5cbiAgICBAaW5jbHVkZSBib3JkZXItZW5kKCRzYWZlLWFyZWEtcG9zaXRpb24sICR0eXBlLCAkY29sb3IpO1xufVxuXG5AbWl4aW4gc2FmZS1hcmVhLW1hcmdpbi1ob3Jpem9udGFsKCRzdGFydCwgJGVuZDogJHN0YXJ0KSB7XG4gICAgJHNhZmUtYXJlYS1lbmQ6IG51bGw7XG4gICAgJHNhZmUtYXJlYS1zdGFydDogbnVsbDtcblxuICAgIEBpZiAoJGVuZCkge1xuICAgICAgICAkc2FmZS1hcmVhLWVuZDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLXJpZ2h0KSArICN7JGVuZH0pO1xuICAgIH1cbiAgICBAaWYgKCRzdGFydCkge1xuICAgICAgICAkc2FmZS1hcmVhLXN0YXJ0OiBjYWxjKHZhcigtLWlvbi1zYWZlLWFyZWEtbGVmdCkgKyAjeyRzdGFydH0pO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1hcmdpbi1ob3Jpem9udGFsKCRzYWZlLWFyZWEtc3RhcnQsICRzYWZlLWFyZWEtZW5kKTtcbn1cblxuQG1peGluIHNhZmUtYXJlYS1tYXJnaW4tc3RhcnQoJHN0YXJ0LCAkZW5kKSB7XG4gICAgJHNhZmUtYXJlYS1zdGFydDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLWxlZnQpICsgI3skc3RhcnR9KTtcblxuICAgIEBpbmNsdWRlIG1hcmdpbi1ob3Jpem9udGFsKCRzYWZlLWFyZWEtc3RhcnQsICRlbmQpO1xufVxuXG5AbWl4aW4gc2FmZS1hcmVhLW1hcmdpbi1lbmQoJHN0YXJ0LCAkZW5kKSB7XG4gICAgJHNhZmUtYXJlYS1lbmQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1yaWdodCkgKyAjeyRlbmR9KTtcblxuICAgIEBpbmNsdWRlIG1hcmdpbi1ob3Jpem9udGFsKCRzdGFydCwgJHNhZmUtYXJlYS1lbmQpO1xufVxuXG5AbWl4aW4gc2FmZS1hcmVhLXBhZGRpbmctaG9yaXpvbnRhbCgkc3RhcnQsICRlbmQ6ICRzdGFydCkge1xuICAgICRzYWZlLWFyZWEtZW5kOiBudWxsO1xuICAgICRzYWZlLWFyZWEtc3RhcnQ6IG51bGw7XG5cbiAgICBAaWYgKCRlbmQpIHtcbiAgICAgICAgJHNhZmUtYXJlYS1lbmQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1yaWdodCkgKyAjeyRlbmR9KTtcbiAgICB9XG4gICAgQGlmICgkc3RhcnQpIHtcbiAgICAgICAgJHNhZmUtYXJlYS1zdGFydDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLWxlZnQpICsgI3skc3RhcnR9KTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBwYWRkaW5nLWhvcml6b250YWwoJHNhZmUtYXJlYS1zdGFydCwgJHNhZmUtYXJlYS1lbmQpO1xufVxuXG5AbWl4aW4gc2FmZS1hcmVhLXBhZGRpbmctc3RhcnQoJHN0YXJ0LCAkZW5kKSB7XG4gICAgJHNhZmUtYXJlYS1zdGFydDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLWxlZnQpICsgI3skc3RhcnR9KTtcblxuICAgIEBpbmNsdWRlIHBhZGRpbmctaG9yaXpvbnRhbCgkc2FmZS1hcmVhLXN0YXJ0LCAkZW5kKTtcbn1cblxuQG1peGluIHNhZmUtYXJlYS1wYWRkaW5nLWVuZCgkc3RhcnQsICRlbmQpIHtcbiAgICAkc2FmZS1hcmVhLWVuZDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLXJpZ2h0KSArICN7JGVuZH0pO1xuXG4gICAgQGluY2x1ZGUgcGFkZGluZy1ob3Jpem9udGFsKCRzdGFydCwgJHNhZmUtYXJlYS1lbmQpO1xufVxuXG5AbWl4aW4gc2FmZS1hcmVhLXBvc2l0aW9uKCR0b3A6IG51bGwsICRlbmQ6IG51bGwsICRib3R0b206IG51bGwsICRzdGFydDogbnVsbCkge1xuICAgICRzYWZlLWFyZWEtc3RhcnQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1sZWZ0KSArICN7JHN0YXJ0fSk7XG4gICAgJHNhZmUtYXJlYS1lbmQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1yaWdodCkgKyAjeyRlbmR9KTtcblxuICAgIEBpbmNsdWRlIHBvc2l0aW9uKCR0b3AsICRzYWZlLWFyZWEtZW5kLCAkYm90dG9tLCAkc2FmZS1hcmVhLXN0YXJ0KTtcbn1cblxuQG1peGluIGNvcmUtaGVhZGluZ3MoKSB7XG4gICAgaDEge1xuICAgICAgICBmb250LXNpemU6IDI2cHg7XG4gICAgfVxuICAgIGgyLCAuaXRlbS1oZWFkaW5nIHtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgIH1cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICB9XG4gICAgaDQge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuICAgIGg1IHtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgIH1cbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG59XG5cbkBtaXhpbiBkYXJrbW9kZSgpIHtcbiAgICAkcm9vdDogI3smfTtcblxuICAgIEBhdC1yb290ICN7YWRkLXJvb3Qtc2VsZWN0b3IoJHJvb3QsIFwiYm9keS5kYXJrXCIpfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIGhvcml6b250YWxfc2Nyb2xsX2l0ZW0oJHdpZHRoLCAkbWluLXdpZHRoLCAkbWF4LXdpZHRoKSB7XG4gICAgZmxleDogMCAwICR3aWR0aDtcbiAgICBtaW4td2lkdGg6ICRtaW4td2lkdGg7XG4gICAgbWF4LXdpZHRoOiAkbWF4LXdpZHRoO1xuICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICBpb24tY2FyZCB7XG4gICAgICAgIC0tdmVydGljYWwtbWFyZ2luOiAxMHB4O1xuICAgICAgICAtLWhvcml6b250YWwtbWFyZ2luOiAxMHB4O1xuXG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSB2YXIoLS1ob3Jpem9udGFsLW1hcmdpbikgLSB2YXIoLS1ob3Jpem9udGFsLW1hcmdpbikpO1xuICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIHZhcigtLXZlcnRpY2FsLW1hcmdpbikgLSB2YXIoLS12ZXJ0aWNhbC1tYXJnaW4pKTtcbiAgICAgICAgbWFyZ2luOiB2YXIoLS12ZXJ0aWNhbC1tYXJnaW4pIHZhcigtLWhvcml6b250YWwtbWFyZ2luKTtcblxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgICAgICAgICAgIC0taG9yaXpvbnRhbC1tYXJnaW46IDZweDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gQ29sb3IgbWl4aW5zLlxuQGZ1bmN0aW9uIGdldF9icmlnaHRuZXNzKCRjb2xvcikge1xuICAgIEByZXR1cm4gKHJlZCgkY29sb3IpICsgZ3JlZW4oJGNvbG9yKSArIGJsdWUoJGNvbG9yKSkgLyAzO1xufVxuXG4vLyBHZXQgdGhlIGJldHRlciBjb2xvciBjb250cmFzdCB1c2luZyBXQ0FHIGFsZ29yeXRobS5cbkBmdW5jdGlvbiBnZXRfY29udHJhc3RfY29sb3IoJGNvbG9yKSB7XG4gICAgJGx1bWlhbmNlOiBsdW1pbmFuY2UoJGNvbG9yKTtcblxuICAgIC8vIFdoaXRlIGx1bWlhbmNlIGlzIDEuXG4gICAgJHdoaXRlQ29udHJhc3Q6ICgkbHVtaWFuY2UgKyAwLjA1KSAvICgxICsgMC4wNSk7XG4gICAgLy8gV2hpdGUgbHVtaWFuY2UgaXMgMC5cbiAgICAkYmxhY2tDb250cmFzdDogKDAuMDUpIC8gKCRsdW1pYW5jZSArIDAuMDUpO1xuXG4gICAgQHJldHVybiBpZigkd2hpdGVDb250cmFzdCA8ICRibGFja0NvbnRyYXN0LCB3aGl0ZSwgYmxhY2spO1xufVxuXG4vLyBDb2xvciBjb250cmFzdCB1c2luZyB5aXEgYXByb3hpbWF0aW9uIHdpdGggMTUwIHRocmVzaG9sZC5cbkBmdW5jdGlvbiBnZXRfY29udHJhc3RfY29sb3JfeWlxKCRjb2xvciwgJGRhcms6IGJsYWNrLCAkbGlnaHQ6IHdoaXRlKSB7XG4gICAgJHI6IHJlZCgkY29sb3IpO1xuICAgICRnOiBncmVlbigkY29sb3IpO1xuICAgICRiOiBibHVlKCRjb2xvcik7XG5cbiAgICAkeWlxOiAoKCRyICogMjk5KSArICgkZyAqIDU4NykgKyAoJGIgKiAxMTQpKSAvIDEwMDA7XG5cbiAgICBAcmV0dXJuIGlmKCR5aXEgPj0gMTI4LCAkZGFyaywgJGxpZ2h0KTtcbn1cblxuLy8gV0NBRyBjb250cmFzdCBhbGdvcnl0aG1cbkBmdW5jdGlvbiBjaGVjay1jb250cmFzdCgkZm9yZWdyb3VuZCwgJGJhY2tncm91bmQpIHtcbiAgICAkZm9yZWdyb3VuZEx1bWlhbmNlOiBsdW1pbmFuY2UoJGZvcmVncm91bmQpO1xuICAgICRiYWNrZ3JvdW5kTHVtaW5hbmNlOiBsdW1pbmFuY2UoJGJhY2tncm91bmQpO1xuXG4gICAgQGlmICgkYmFja2dyb3VuZEx1bWluYW5jZSA8ICRmb3JlZ3JvdW5kTHVtaWFuY2UpIHtcbiAgICAgICAgQHJldHVybiAoJGJhY2tncm91bmRMdW1pbmFuY2UgKyAwLjA1KSAvICgkZm9yZWdyb3VuZEx1bWlhbmNlICsgMC4wNSk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIEByZXR1cm4gKCRmb3JlZ3JvdW5kTHVtaWFuY2UgKyAwLjA1KSAvICgkYmFja2dyb3VuZEx1bWluYW5jZSArIDAuMDUpO1xuICAgIH1cbn1cblxuQGZ1bmN0aW9uIGx1bWluYW5jZSgkY29sb3IpIHtcbiAgICAkcjogcmVkKCRjb2xvcik7XG4gICAgJGc6IGdyZWVuKCRjb2xvcik7XG4gICAgJGI6IGJsdWUoJGNvbG9yKTtcblxuICAgICRyOiBjb21wb25lbnQtbHVtaW5hbmNlKCRyKTtcbiAgICAkZzogY29tcG9uZW50LWx1bWluYW5jZSgkZyk7XG4gICAgJGI6IGNvbXBvbmVudC1sdW1pbmFuY2UoJGIpO1xuXG4gICAgQHJldHVybiAkciAqIDAuMjEyNiArICRnICogMC43MTUyICsgJGIgKiAwLjA3MjI7XG59XG5cbkBmdW5jdGlvbiBjb21wb25lbnQtbHVtaW5hbmNlKCR2YWx1ZSkge1xuICAgICR2YWx1ZTogJHZhbHVlIC8gMjU1O1xuXG4gICAgQGlmICgkdmFsdWUgPD0gMC4wMzkyOCkge1xuICAgICAgICBAcmV0dXJuICR2YWx1ZSAvIDEyLjkyO1xuICAgIH0gQGVsc2Uge1xuICAgICAgICBAcmV0dXJuIG1hdGgucG93KCgkdmFsdWUgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcbiAgICB9XG59XG4iLCIvKlxuICogQXBwIEN1c3RvbSBBcHAgdmFyaWFibGVzIFNDU1NcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFBsYWNlIGhlcmUgYWxsIGN1c3RvbSBhcHAgdmFyaWFibGVzLlxuICovXG4iLCIvKlxuICogQXBwIEdsb2JhbCB2YXJpYWJsZXMgU0NTU1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogUGxhY2UgaGVyZSBhbGwgZ2xvYmFsIHZhcmlhYmxlcy5cbiAqL1xuXG4kd2hpdGU6ICAgICAgICNmZmZmZmYgIWRlZmF1bHQ7XG4kZ3JheS0xMDA6ICAgICNmOGY5ZmEgIWRlZmF1bHQ7XG4kZ3JheS0yMDA6ICAgICNlOWVjZWYgIWRlZmF1bHQ7XG4kZ3JheS0zMDA6ICAgICNkZWUyZTYgIWRlZmF1bHQ7IC8vIFN0cm9rZVxuJGdyYXktNDAwOiAgICAjY2VkNGRhICFkZWZhdWx0O1xuJGdyYXktNTAwOiAgICAjOGY5NTllICFkZWZhdWx0OyAvLyBTdHJva2Ugb24gaW5wdXRzXG4kZ3JheS02MDA6ICAgICM2YTczN2IgIWRlZmF1bHQ7XG4kZ3JheS03MDA6ICAgICM0OTUwNTcgIWRlZmF1bHQ7XG4kZ3JheS04MDA6ICAgICMzNDNhNDAgIWRlZmF1bHQ7XG4kZ3JheS05MDA6ICAgICMxZDIxMjUgIWRlZmF1bHQ7IC8vIENvcHkgdGV4dFxuJGJsYWNrOiAgICAgICAjMDAwMDAwICFkZWZhdWx0OyAvLyBBdm9pZCB1c2FnZVxuXG4kYmx1ZTogICAgICAgICMwZjZjYmYgIWRlZmF1bHQ7XG4kY3lhbjogICAgICAgICMwMDgxOTYgIWRlZmF1bHQ7IC8vIE5vdCB1c2VkLlxuJGdyZWVuOiAgICAgICAjMzU3YTMyICFkZWZhdWx0O1xuJHJlZDogICAgICAgICAjY2EzMTIwICFkZWZhdWx0O1xuJHllbGxvdzogICAgICAjZjBhZDRlICFkZWZhdWx0O1xuXG4kYnJhbmQtY29sb3I6ICNmZjc1MTggIWRlZmF1bHQ7XG5cbiR0ZXh0LWNvbG9yOiAgICAgICAgICAgICAgICRncmF5LTkwMCAhZGVmYXVsdDtcbiR0ZXh0LWNvbG9yLXJnYjogICAgICAgICAgIGNvbG9yLXRvLXJnYi1saXN0KCR0ZXh0LWNvbG9yKSAhZGVmYXVsdDtcbiR0ZXh0LWNvbG9yLWRhcms6ICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiR0ZXh0LWNvbG9yLWRhcmstcmdiOiAgICAgIGNvbG9yLXRvLXJnYi1saXN0KCR0ZXh0LWNvbG9yLWRhcmspICFkZWZhdWx0O1xuXG4kYmFja2dyb3VuZC1jb2xvcjogICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGJhY2tncm91bmQtY29sb3ItcmdiOiAgICAgIGNvbG9yLXRvLXJnYi1saXN0KCRiYWNrZ3JvdW5kLWNvbG9yKSAhZGVmYXVsdDtcbiRiYWNrZ3JvdW5kLWNvbG9yLWRhcms6ICAgICAkZ3JheS05MDAgIWRlZmF1bHQ7IC8vICMxYTFhMWFcbiRiYWNrZ3JvdW5kLWNvbG9yLWRhcmstcmdiOiBjb2xvci10by1yZ2ItbGlzdCgkYmFja2dyb3VuZC1jb2xvci1kYXJrKSAhZGVmYXVsdDtcblxuJGlvbi1pdGVtLWJhY2tncm91bmQ6ICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGlvbi1pdGVtLWJhY2tncm91bmQtcmdiOiAgY29sb3ItdG8tcmdiLWxpc3QoJGlvbi1pdGVtLWJhY2tncm91bmQpICFkZWZhdWx0O1xuJGlvbi1pdGVtLWJhY2tncm91bmQtZGFyazogJGdyYXktOTAwICFkZWZhdWx0O1xuJGlvbi1pdGVtLWJhY2tncm91bmQtZGFyay1yZ2I6IGNvbG9yLXRvLXJnYi1saXN0KCRpb24taXRlbS1iYWNrZ3JvdW5kLWRhcmspICFkZWZhdWx0O1xuXG4kcHJpbWFyeTogICAgJGJyYW5kLWNvbG9yICFkZWZhdWx0O1xuJHNlY29uZGFyeTogICRncmF5LTMwMCAhZGVmYXVsdDtcbiRkYW5nZXI6ICAgICAkcmVkICFkZWZhdWx0O1xuJHdhcm5pbmc6ICAgICR5ZWxsb3cgIWRlZmF1bHQ7XG4kc3VjY2VzczogICAgJGdyZWVuICFkZWZhdWx0O1xuJGluZm86ICAgICAgICRibHVlICFkZWZhdWx0O1xuJGxpZ2h0OiAgICAgICRncmF5LTEwMCAhZGVmYXVsdDtcbiRtZWRpdW06ICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XG4kZGFyazogICAgICAgJGdyYXktOTAwICFkZWZhdWx0O1xuXG4kY29sb3JzOiAgKFxuICAgIHByaW1hcnk6IChsaWdodDogJHByaW1hcnksIGRhcms6ICRwcmltYXJ5KSxcbiAgICBzZWNvbmRhcnk6IChsaWdodDogJHNlY29uZGFyeSwgZGFyazogJGdyYXktNzAwKSxcbiAgICBzdWNjZXNzOiAobGlnaHQ6ICRzdWNjZXNzKSxcbiAgICB3YXJuaW5nOiAobGlnaHQ6ICR3YXJuaW5nKSxcbiAgICBkYW5nZXI6ICAobGlnaHQ6ICRkYW5nZXIpLFxuICAgIGluZm86IChsaWdodDogJGluZm8pLFxuICAgIGxpZ2h0OiAobGlnaHQ6ICRsaWdodCwgZGFyazogJGRhcmspLFxuICAgIG1lZGl1bTogKGxpZ2h0OiAkbWVkaXVtLCBkYXJrOiAkZ3JheS0yMDApLFxuICAgIGRhcms6IChsaWdodDogJGRhcmssIGRhcms6ICRsaWdodCksXG4pICFkZWZhdWx0O1xuXG4vKipcbiAqIExheW91dCBCcmVha3BvaW50c1xuICpcbiAqIGh0dHBzOi8vaW9uaWNmcmFtZXdvcmsuY29tL2RvY3MvbGF5b3V0L2dyaWQjZGVmYXVsdC1icmVha3BvaW50c1xuICovXG5cbi8vIFRoZSBtaW5pbXVtIGRpbWVuc2lvbnMgYXQgd2hpY2ggeW91ciBsYXlvdXQgd2lsbCBjaGFuZ2UsXG4vLyBhZGFwdGluZyB0byBkaWZmZXJlbnQgc2NyZWVuIHNpemVzLCBmb3IgdXNlIGluIG1lZGlhIHF1ZXJpZXNcbiRzY3JlZW4tYnJlYWtwb2ludHM6IChcbiAgICB4czogMCxcbiAgICBzbTogNTc2cHgsXG4gICAgbWQ6IDc2OHB4LFxuICAgIGxnOiA5OTJweCxcbiAgICB0YWJsZXQ6IDk5MnB4LFxuICAgIHhsOiAxMjAwcHhcbikgIWRlZmF1bHQ7XG5cbiRjb3JlLWNvdXJzZS1pbWFnZS1iYWNrZ3JvdW5kOiAjODFlY2VjLCAjNzRiOWZmLCAjYTI5YmZlLCAjZGZlNmU5LCAjMDBiODk0LCAjMDk4NGUzLCAjYjJiZWMzLCAjZmRjYjZlLCAjZmQ3OWE4LCAjNmM1Y2U3ICFkZWZhdWx0O1xuJGNvcmUtZGQtcXVlc3Rpb24tY29sb3JzOiAjRkZGRkZGLCAjQjBDNERFLCAjRENEQ0RDLCAjRDhCRkQ4LCAjODdDRUZBLCAjREFBNTIwLCAjRkZENzAwLCAjRjBFNjhDICFkZWZhdWx0O1xuJGNvcmUtdGV4dC1oaWdodGxpZ2h0LWJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGJsdWUsIDQwJSkgIWRlZmF1bHQ7XG5cbiRjb3JlLWZpeGVkLXVybDogZmFsc2UgIWRlZmF1bHQ7XG4kY29yZS1kYXNoYm9hcmQtbG9nbzogZmFsc2UgIWRlZmF1bHQ7XG4kY29yZS1hbHdheXMtc2hvdy1tYWluLW1lbnU6IGZhbHNlICFkZWZhdWx0O1xuJGNvcmUtZm9ybWF0LXRleHQtbmV2ZXItc2hvcnRlbjogZmFsc2UgIWRlZmF1bHQ7XG5cbiRjb3JlLWhpZGUtY291cnNlaW1hZ2Utb24tY291cnNlOiBmYWxzZSAhZGVmYXVsdDtcbiRjb3JlLWhpZGUtcHJvZ3Jlc3Mtb24tY291cnNlOiBmYWxzZSAhZGVmYXVsdDtcbiRjb3JlLWhpZGUtcHJvZ3Jlc3Mtb24tc2VjdGlvbi1zZWxlY3RvcjogZmFsc2UgIWRlZmF1bHQ7XG5cbiRjb3JlLWNvdXJzZS1oaWRlLXRodW1iLW9uLWNhcmRzOiBmYWxzZSAhZGVmYXVsdDtcbiRjb3JlLWNvdXJzZS10aHVtYi1vbi1jYXJkcy1iYWNrZ3JvdW5kOiBudWxsICFkZWZhdWx0O1xuJGNvcmUtY291cnNlLWhpZGUtcHJvZ3Jlc3Mtb24tY2FyZHM6IGZhbHNlICFkZWZhdWx0O1xuXG4vLyBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIGxvZ2luIHBhZ2UuXG4kY29yZS1sb2dpbi1idXR0b24tb3V0bGluZTogZmFsc2UgIWRlZmF1bHQ7XG4kY29yZS1sb2dpbi1idXR0b24tb3V0bGluZS1kYXJrOiAkY29yZS1sb2dpbi1idXR0b24tb3V0bGluZSAhZGVmYXVsdDtcbiRjb3JlLWxvZ2luLWxvYWRpbmctY29sb3I6IGZhbHNlICFkZWZhdWx0O1xuJGNvcmUtbG9naW4tbG9hZGluZy1jb2xvci1kYXJrOiAkdGV4dC1jb2xvci1kYXJrICFkZWZhdWx0O1xuJGNvcmUtbG9naW4taGlkZS1mb3Jnb3QtcGFzc3dvcmQ6IGZhbHNlICFkZWZhdWx0O1xuJGNvcmUtbG9naW4taGlkZS1uZWVkLWhlbHA6IGZhbHNlICFkZWZhdWx0O1xuXG4vLyBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIG1vcmUgcGFnZS4gKGRlcHJlY2F0ZWQgb24gNC4wKVxuJGNvcmUtbW9yZS1oaWRlLXNpdGVpbmZvOiBmYWxzZSAhZGVmYXVsdDtcbiRjb3JlLW1vcmUtaGlkZS1zaXRlbmFtZTogZmFsc2UgIWRlZmF1bHQ7XG4kY29yZS1tb3JlLWhpZGUtc2l0ZXVybDogZmFsc2UgIWRlZmF1bHQ7XG5cbi8vIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdXNlciBwYWdlLlxuJGNvcmUtdXNlci1oaWRlLXNpdGVpbmZvOiAkY29yZS1tb3JlLWhpZGUtc2l0ZWluZm8gIWRlZmF1bHQ7XG4kY29yZS11c2VyLWhpZGUtc2l0ZW5hbWU6ICRjb3JlLW1vcmUtaGlkZS1zaXRlbmFtZSAhZGVmYXVsdDtcbiRjb3JlLXVzZXItaGlkZS1zaXRldXJsOiAkY29yZS1tb3JlLWhpZGUtc2l0ZXVybCAhZGVmYXVsdDtcblxuLy8gQWN0aXZpdHkgaWNvbiBiYWNrZ3JvdW5kIGNvbG9ycy5cbiRhY3Rpdml0eS1pY29uLWNvbG9yczogKFxuICAgIGFkbWluaXN0cmF0aW9uOiAjNWQ2M2Y2LFxuICAgIGFzc2Vzc21lbnQ6ICNlYjY2YTIsXG4gICAgY29sbGFib3JhdGlvbjogI2Y3NjM0ZCxcbiAgICBjb21tdW5pY2F0aW9uOiAjMTFhNjc2LFxuICAgIGNvbnRlbnQ6ICMzOTliZTIsXG4gICAgaW50ZXJmYWNlOiAjYTM3OGZmXG4pICFkZWZhdWx0O1xuXG4vLyBDYWxlbmRhciBldmVudCBjYXRlZ29yeSBiYWNrZ3JvdW5kIGNvbG9ycy5cbiRjYWxlbmRhci1ldmVudC1jYXRlZ29yeS1jb2xvcnM6IChcbiAgICBjYXRlZ29yeTogIzhlMjRhYSxcbiAgICBjb3Vyc2U6ICRyZWQsXG4gICAgZ3JvdXA6ICR5ZWxsb3csXG4gICAgdXNlcjogJGJsdWUsXG4gICAgc2l0ZTogJGdyZWVuXG4pICFkZWZhdWx0O1xuIiwiQGltcG9ydCBcIn50aGVtZS9nbG9iYWxzLnNjc3NcIjtcblxuOmhvc3QtY29udGV4dCguaW9zKSB7XG4gICAgaW9uLWZvb3RlciAudG9vbGJhcjpsYXN0LWNoaWxkIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDRweDtcbiAgICAgICAgbWluLWhlaWdodDogMDtcbiAgICB9XG59XG5cbmlvbi1jb250ZW50IHtcbiAgICAtLWNvbnRlbnQtYmFja2dyb3VuZDogdmFyKC0tYmFja2dyb3VuZC1hbHRlcm5hdGl2ZSk7XG4gICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1jb250ZW50LWJhY2tncm91bmQpO1xuXG4gICAgJjo6cGFydChzY3JvbGwpIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbiAgICB9XG59XG5cbi5hZGRvbi1tZXNzYWdlcy1kaXNjdXNzaW9uLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmctYm90dG9tOiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29udGVudC1iYWNrZ3JvdW5kKTtcbn1cblxuLmFkZG9uLW1lc3NhZ2VzLWRhdGUge1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG59XG5cbi8vIE1lc3NhZ2UgaXRlbS5cbmlvbi1pdGVtLmFkZG9uLW1lc3NhZ2Uge1xuICAgIC0tbWVzc2FnZS1iYWNrZ3JvdW5kOiB2YXIoLS1hZGRvbi1tZXNzYWdlcy1tZXNzYWdlLWJnKTtcbiAgICAtLW1lc3NhZ2UtYWN0aXZhdGVkLWJhY2tncm91bmQ6IHZhcigtLWFkZG9uLW1lc3NhZ2VzLW1lc3NhZ2UtYWN0aXZhdGVkLWJnKTtcbiAgICAtLW1lc3NhZ2UtYWxpZ25tZW50OiBmbGV4LXN0YXJ0O1xuXG4gICAgYm9yZGVyOiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLW1lZGl1bS1yYWRpdXMpO1xuICAgIHBhZGRpbmc6IDAgOHB4IDAgOHB4O1xuICAgIG1hcmdpbjogOHB4O1xuICAgIC0tYmFja2dyb3VuZDogdmFyKC0tbWVzc2FnZS1iYWNrZ3JvdW5kKTtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1tZXNzYWdlLWJhY2tncm91bmQpO1xuICAgIGFsaWduLXNlbGY6IHZhcigtLW1lc3NhZ2UtYWxpZ25tZW50KTtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1heC13aWR0aDogdmFyKC0tbGlzdC1pdGVtLW1heC13aWR0aCk7XG4gICAgLS1taW4taGVpZ2h0OiB2YXIoLS1hMTF5LW1pbi10YXJnZXQtc2l6ZSk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIEBpbmNsdWRlIGNvcmUtdHJhbnNpdGlvbih3aWR0aCk7XG4gICAgLy8gVGhpcyBpcyBuZWVkZWQgdG8gZGlzcGxheSBidWJibGUgdGFpbHMuXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG5cbiAgICAmOjpwYXJ0KG5hdGl2ZSkge1xuICAgICAgICAtLWlubmVyLWJvcmRlci13aWR0aDogMHB4O1xuICAgICAgICAtLWlubmVyLXBhZGRpbmctZW5kOiAwcHg7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggMnB4IHJnYmEoMCwwLDAsLjMpKTtcbiAgICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdygycHggMnB4IDJweCByZ2JhKDAsMCwwLC4zKSk7XG4gICAgfVxuXG4gICAgY29yZS1mb3JtYXQtdGV4dCA+IHA6b25seS1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICB9XG5cbiAgICAuYWRkb24tbWVzc2FnZS11c2VyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgY29sb3I6IHZhcigtLWlvbi10ZXh0LWNvbG9yKTtcblxuICAgICAgICBjb3JlLXVzZXItYXZhdGFyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgLS1jb3JlLWF2YXRhci1zaXplOiB2YXIoLS1hZGRvbi1tZXNzYWdlcy1hdmF0YXItc2l6ZSk7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cblxuICAgICAgICBkaXYge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogLjVyZW07XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAuNXJlbTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpb24tbm90ZSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1hZGRvbi1tZXNzYWdlcy1tZXNzYWdlLW5vdGUtdGV4dCk7XG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tYWRkb24tbWVzc2FnZXMtbWVzc2FnZS1ub3RlLWZvbnQtc2l6ZSk7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogOHB4IDA7XG4gICAgICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgfVxuXG4gICAgJlt0YXBwYWJsZV06YWN0aXZlIHtcbiAgICAgICAgLS1tZXNzYWdlLWJhY2tncm91bmQ6IHZhcigtLW1lc3NhZ2UtYWN0aXZhdGVkLWJhY2tncm91bmQpO1xuICAgIH1cblxuICAgIGlvbi1sYWJlbCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogOHB4IDA7XG4gICAgfVxuXG4gICAgLmFkZG9uLW1lc3NhZ2UtdGV4dCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICAqIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAudGFpbCB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICBib3JkZXI6IDAuNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3VjaC1hY3Rpb246IG5vbmU7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdmFyKC0tbWVzc2FnZS1iYWNrZ3JvdW5kKTtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmVzIHdoZW4gYW4gaXRlbS1tZXNzYWdlIGlzIHRoZSB1c2VyJ3MuXG4gICAgJi5hZGRvbi1tZXNzYWdlLW1pbmUge1xuICAgICAgICAtLW1lc3NhZ2UtYmFja2dyb3VuZDogdmFyKC0tYWRkb24tbWVzc2FnZXMtbWVzc2FnZS1taW5lLWJnKTtcbiAgICAgICAgLS1tZXNzYWdlLWFjdGl2YXRlZC1iYWNrZ3JvdW5kOiB2YXIoLS1hZGRvbi1tZXNzYWdlcy1tZXNzYWdlLW1pbmUtYWN0aXZhdGVkLWJnKTtcbiAgICAgICAgLS1tZXNzYWdlLWFsaWdubWVudDogZmxleC1lbmQ7XG5cbiAgICAgICAgLnNwaW5uZXIge1xuICAgICAgICAgICAgQGluY2x1ZGUgZmxvYXQoZW5kKTtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1hcmdpbigycHgsIC0zcHgsIC0ycHgsIDVweCk7XG5cbiAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDE2cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLnRhaWwge1xuICAgICAgICAgICAgQGluY2x1ZGUgcG9zaXRpb24obnVsbCwgLThweCwgbnVsbCwgbnVsbCk7XG4gICAgICAgICAgICBAaW5jbHVkZSBtYXJnaW4taG9yaXpvbnRhbChudWxsLCAtMC41cmVtKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuYWRkb24tbWVzc2FnZS1ub3QtbWluZSAudGFpbCB7XG4gICAgICAgIEBpbmNsdWRlIHBvc2l0aW9uKG51bGwsIG51bGwsIG51bGwsIC04cHgpO1xuICAgICAgICBAaW5jbHVkZSBtYXJnaW4taG9yaXpvbnRhbCgtMC41cmVtLCBudWxsKTtcbiAgICB9XG5cbiAgICAuYWRkb24tbWVzc2FnZXMtZGVsZXRlLWJ1dHRvbiB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IGluaXRpYWw7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBpbml0aWFsO1xuICAgICAgICBtYXJnaW4tdG9wOiAwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICAgICAgaGVpZ2h0OiB2YXIoLS1hMTF5LW1pbi10YXJnZXQtc2l6ZSkgIWltcG9ydGFudDtcbiAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG5cbiAgICAgICAgaW9uLWljb24ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjRlbTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiBpbml0aWFsO1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWRhbmdlcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmFkZG9uLW1lc3NhZ2Utbm8tdXNlciB7XG4gICAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICB9XG59XG4iLCJAaW1wb3J0IFwifnRoZW1lL2NvbXBvbmVudHMvZGlzY3Vzc2lvbi5zY3NzXCI7XG5cbjpob3N0IHtcbiAgICAuYWRkb24tbW9kX2NoYXQtbm90aWNlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgfVxufVxuIl19 */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { CoreAnimations } from '@components/animations';\nimport { CoreSendMessageFormComponent } from '@components/send-message-form/send-message-form';\nimport { CanLeave } from '@guards/can-leave';\nimport { IonContent } from '@ionic/angular';\nimport { CoreApp } from '@services/app';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Network, NgZone, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { Subscription } from 'rxjs';\nimport { AddonModChatUsersModalComponent, AddonModChatUsersModalResult } from '../../components/users-modal/users-modal';\nimport { AddonModChat, AddonModChatProvider, AddonModChatUser } from '../../services/chat';\nimport { AddonModChatFormattedMessage, AddonModChatHelper } from '../../services/chat-helper';\n\n/**\n * Page that displays a chat session.\n */\n@Component({\n    selector: 'page-addon-mod-chat-chat',\n    templateUrl: 'chat.html',\n    animations: [CoreAnimations.SLIDE_IN_OUT],\n    styleUrls: ['chat.scss'],\n})\nexport class AddonModChatChatPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content?: IonContent;\n    @ViewChild(CoreSendMessageFormComponent) sendMessageForm?: CoreSendMessageFormComponent;\n\n    loaded = false;\n    title = '';\n    messages: AddonModChatFormattedMessage[] = [];\n    newMessage?: string;\n    polling?: number;\n    isOnline: boolean;\n    currentUserId: number;\n    sending = false;\n    courseId!: number;\n    cmId!: number;\n\n    protected chatId!: number;\n    protected sessionId?: string;\n    protected lastTime = 0;\n    protected oldContentHeight = 0;\n    protected onlineSubscription: Subscription;\n    protected viewDestroyed = false;\n    protected pollingRunning = false;\n    protected users: AddonModChatUser[] = [];\n\n    constructor() {\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n        this.isOnline = CoreApp.isOnline();\n        this.onlineSubscription = Network.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreApp.isOnline();\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.chatId = CoreNavigator.getRequiredRouteNumberParam('chatId');\n            this.title = CoreNavigator.getRouteParam('title') || '';\n\n            await this.loginUser();\n\n            await this.fetchMessages();\n\n            this.startPolling();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_chat.errorwhileconnecting', true);\n            CoreNavigator.back();\n        } finally {\n            this.loaded = true;\n        }\n\n    }\n\n    /**\n     * Runs when the page has fully entered and is now the active page.\n     * This event will fire, whether it was the first load or a cached page.\n     */\n    ionViewDidEnter(): void {\n        this.startPolling();\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'chat' });\n        this.stopPolling();\n    }\n\n    /**\n     * Convenience function to login the user.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loginUser(): Promise<void> {\n        this.sessionId = await AddonModChat.loginUser(this.chatId);\n    }\n\n    /**\n     * Convenience function to fetch chat messages.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchMessages(): Promise<void> {\n        const messagesInfo = await AddonModChat.getLatestMessages(this.sessionId!, this.lastTime);\n\n        this.lastTime = messagesInfo.chatnewlasttime || 0;\n\n        const messages = await AddonModChat.getMessagesUserData(messagesInfo.messages, this.courseId);\n\n        if (!messages.length) {\n            // No messages yet, nothing else to do.\n            return;\n        }\n\n        const previousLength = this.messages.length;\n        this.messages = this.messages.concat(messages);\n\n        // Calculate which messages need to display the date or user data.\n        for (let index = previousLength; index < this.messages.length; index++) {\n            const prevMessage = index > 0 ? this.messages[index - 1] : undefined;\n\n            this.messages[index] = AddonModChatHelper.formatMessage(this.currentUserId, this.messages[index], prevMessage);\n\n            const message = this.messages[index];\n\n            if (message.beep && message.beep != String(this.currentUserId)) {\n                this.loadMessageBeepWho(message);\n            }\n        }\n\n        this.messages[this.messages.length - 1].showTail = true;\n\n        // New messages or beeps, scroll to bottom.\n        this.scrollToBottom();\n    }\n\n    protected async loadMessageBeepWho(message: AddonModChatFormattedMessage): Promise<void> {\n        message.beepWho = await this.getUserFullname(message.beep!);\n    }\n\n    /**\n     * Display the chat users modal.\n     */\n    async showChatUsers(): Promise<void> {\n        // Create the toc modal.\n        const modalData = await CoreDomUtils.openSideModal<AddonModChatUsersModalResult>({\n            component: AddonModChatUsersModalComponent,\n            componentProps: {\n                sessionId: this.sessionId,\n                cmId: this.cmId,\n            },\n        });\n\n        if (modalData) {\n            if (modalData.talkTo) {\n                this.newMessage = `To ${modalData.talkTo}: ` + (this.sendMessageForm?.message || '');\n            }\n            if (modalData.beepTo) {\n                this.sendMessage('', modalData.beepTo);\n            }\n\n            this.users = modalData.users;\n        }\n    }\n\n    /**\n     * Get the user fullname for a beep.\n     *\n     * @param id User Id before parsing.\n     * @return User fullname.\n     */\n    protected async getUserFullname(id: string): Promise<string> {\n        const idNumber = parseInt(id, 10);\n\n        if (isNaN(idNumber)) {\n            return id;\n        }\n\n        const user = this.users.find((user) => user.id == idNumber);\n\n        if (user) {\n            return user.fullname;\n        }\n\n        try {\n            const data = await AddonModChat.getChatUsers(this.sessionId!, { cmId: this.cmId });\n\n            this.users = data.users;\n            const user = this.users.find((user) => user.id == idNumber);\n\n            if (user) {\n                return user.fullname;\n            }\n\n            return id;\n        } catch (error) {\n            // Ignore errors.\n            return id;\n        }\n    }\n\n    /**\n     * Start the polling to get chat messages periodically.\n     */\n    protected startPolling(): void {\n        // We already have the polling in place.\n        if (this.polling) {\n            return;\n        }\n\n        // Start polling.\n        this.polling = window.setInterval(() => {\n            CoreUtils.ignoreErrors(this.fetchMessagesInterval());\n        }, AddonModChatProvider.POLL_INTERVAL);\n    }\n\n    /**\n     * Stop polling for messages.\n     */\n    protected stopPolling(): void {\n        clearInterval(this.polling);\n        this.polling = undefined;\n    }\n\n    /**\n     * Convenience function to be called every certain time to fetch chat messages.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchMessagesInterval(): Promise<void> {\n        if (!this.isOnline || this.pollingRunning) {\n            // Obviously we cannot check for new messages when the app is offline.\n            return;\n        }\n\n        this.pollingRunning = true;\n\n        try {\n            await this.fetchMessages();\n        } catch {\n            try {\n                // Try to login, it might have failed because the session expired.\n                await this.loginUser();\n\n                await this.fetchMessages();\n            } catch (error) {\n                // Fail again. Stop polling if needed.\n                this.stopPolling();\n                CoreDomUtils.showErrorModalDefault(error, 'addon.mod_chat.errorwhileretrievingmessages', true);\n\n                throw error;\n            }\n        } finally {\n            this.pollingRunning = false;\n        }\n    }\n\n    /**\n     * Send a message to the chat.\n     *\n     * @param text Text of the nessage.\n     * @param beep ID of the user to beep.\n     */\n    async sendMessage(text: string, beep: number = 0): Promise<void> {\n        if (!this.isOnline) {\n            // Silent error, the view should prevent this.\n            return;\n        } else if (beep === 0 && !text.trim()) {\n            // Silent error.\n            return;\n        }\n\n        this.sending = true;\n\n        try {\n            await AddonModChat.sendMessage(this.sessionId!, text, beep);\n\n            // Update messages to show the sent message.\n            CoreUtils.ignoreErrors(this.fetchMessagesInterval());\n        } catch (error) {\n            // Only close the keyboard if an error happens, we want the user to be able to send multiple\n            // messages without the keyboard being closed.\n            CoreApp.closeKeyboard();\n\n            this.newMessage = text;\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_chat.errorwhilesendingmessage', true);\n        } finally {\n            this.sending = false;\n        }\n    }\n\n    /**\n     * Try to reconnect.\n     *\n     * @return Promise resolved when done.\n     */\n    async reconnect(): Promise<void> {\n        const modal = await CoreDomUtils.showModalLoading();\n\n        try {\n            // Call startPolling would take a while for the first execution, so we'll execute it manually to check if it works now.\n            await this.fetchMessagesInterval();\n\n            // It works, start the polling again.\n            this.startPolling();\n        } catch {\n            // Ignore errors.\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Scroll bottom when render has finished.\n     */\n    async scrollToBottom(): Promise<void> {\n        // Need a timeout to leave time to the view to be rendered.\n        await CoreUtils.nextTick();\n        if (!this.viewDestroyed) {\n            this.content?.scrollToBottom();\n        }\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved with true if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (! this.messages.some((message) => !message.special)) {\n            return true;\n        }\n\n        // Modified, confirm user wants to go back.\n        await CoreDomUtils.showConfirm(Translate.instant('addon.mod_chat.confirmloss'));\n\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.onlineSubscription && this.onlineSubscription.unsubscribe();\n        this.stopPolling();\n        this.viewDestroyed = true;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild } from '@angular/core';\nimport { CoreCourseModuleMainActivityPage } from '@features/course/classes/main-activity-page';\nimport { AddonModChatIndexComponent } from '../../components/index/index';\n\n/**\n * Page that displays a chat.\n */\n@Component({\n    selector: 'page-addon-mod-chat-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModChatIndexPage extends CoreCourseModuleMainActivityPage<AddonModChatIndexComponent> {\n\n    @ViewChild(AddonModChatIndexComponent) activityComponent?: AddonModChatIndexComponent;\n\n}\n","export default \"/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host-context(.ios) ion-footer .toolbar:last-child {\\n  padding-bottom: 4px;\\n  min-height: 0;\\n}\\nion-content {\\n  --content-background: var(--background-alternative);\\n  --background: var(--content-background);\\n}\\nion-content::part(scroll) {\\n  padding-bottom: 0 !important;\\n}\\n.addon-messages-discussion-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 16px !important;\\n  background: var(--content-background);\\n}\\n.addon-messages-date {\\n  font-weight: normal;\\n  font-size: 0.9rem;\\n}\\nion-item.addon-message {\\n  --message-background: var(--addon-messages-message-bg);\\n  --message-activated-background: var(--addon-messages-message-activated-bg);\\n  --message-alignment: flex-start;\\n  border: 0;\\n  border-radius: var(--medium-radius);\\n  padding: 0 8px 0 8px;\\n  margin: 8px;\\n  --background: var(--message-background);\\n  background: var(--message-background);\\n  align-self: var(--message-alignment);\\n  width: 90%;\\n  max-width: var(--list-item-max-width);\\n  --min-height: var(--a11y-min-target-size);\\n  position: relative;\\n  transition: width 500ms ease-in-out;\\n  overflow: visible;\\n}\\nion-item.addon-message::part(native) {\\n  --inner-border-width: 0px;\\n  --inner-padding-end: 0px;\\n  padding: 0;\\n  margin: 0;\\n}\\nion-item.addon-message:hover {\\n  filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));\\n}\\nion-item.addon-message core-format-text > p:only-child {\\n  display: inline;\\n}\\nion-item.addon-message .addon-message-user {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n  margin-top: 0;\\n  color: var(--ion-text-color);\\n}\\nion-item.addon-message .addon-message-user core-user-avatar {\\n  display: block;\\n  --core-avatar-size: var(--addon-messages-avatar-size);\\n  margin: 0;\\n}\\nion-item.addon-message .addon-message-user div {\\n  font-weight: 500;\\n  flex-grow: 1;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\nion-item.addon-message ion-note {\\n  color: var(--addon-messages-message-note-text);\\n  font-size: var(--addon-messages-message-note-font-size);\\n  margin: 0;\\n  padding: 8px 0;\\n  align-self: flex-start;\\n}\\nion-item.addon-message[tappable]:active {\\n  --message-background: var(--message-activated-background);\\n}\\nion-item.addon-message ion-label {\\n  margin: 0;\\n  padding: 8px 0;\\n}\\nion-item.addon-message .addon-message-text {\\n  display: inline-flex;\\n}\\nion-item.addon-message .addon-message-text * {\\n  color: var(--ion-text-color);\\n}\\nion-item.addon-message .tail {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  border: 0.5rem solid transparent;\\n  position: absolute;\\n  touch-action: none;\\n  bottom: 0;\\n  border-bottom-color: var(--message-background);\\n}\\nion-item.addon-message.addon-message-mine {\\n  --message-background: var(--addon-messages-message-mine-bg);\\n  --message-activated-background: var(--addon-messages-message-mine-activated-bg);\\n  --message-alignment: flex-end;\\n}\\nion-item.addon-message.addon-message-mine .spinner {\\n  float: right;\\n  margin-left: 5px;\\n  margin-right: -3px;\\n  margin-top: 2px;\\n  margin-bottom: -2px;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-mine .spinner, :host-context([dir=rtl]) ion-item.addon-message.addon-message-mine .spinner {\\n  float: left;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-mine .spinner {\\n    margin-left: unset;\\n    margin-right: unset;\\n    -webkit-margin-start: 5px;\\n    margin-inline-start: 5px;\\n    -webkit-margin-end: -3px;\\n    margin-inline-end: -3px;\\n  }\\n}\\nion-item.addon-message.addon-message-mine .spinner svg {\\n  width: 16px;\\n  height: 16px;\\n}\\nion-item.addon-message.addon-message-mine .tail {\\n  right: -8px;\\n  margin-right: -0.5rem;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-mine .tail, :host-context([dir=rtl]) ion-item.addon-message.addon-message-mine .tail {\\n  left: unset;\\n  right: unset;\\n  left: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-mine .tail {\\n    margin-right: unset;\\n    -webkit-margin-end: -0.5rem;\\n    margin-inline-end: -0.5rem;\\n  }\\n}\\nion-item.addon-message.addon-message-not-mine .tail {\\n  left: -8px;\\n  margin-left: -0.5rem;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-not-mine .tail, :host-context([dir=rtl]) ion-item.addon-message.addon-message-not-mine .tail {\\n  left: unset;\\n  right: unset;\\n  right: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-not-mine .tail {\\n    margin-left: unset;\\n    -webkit-margin-start: -0.5rem;\\n    margin-inline-start: -0.5rem;\\n  }\\n}\\nion-item.addon-message .addon-messages-delete-button {\\n  min-height: initial;\\n  line-height: initial;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  height: var(--a11y-min-target-size) !important;\\n  align-self: flex-end;\\n}\\nion-item.addon-message .addon-messages-delete-button ion-icon {\\n  font-size: 1.4em;\\n  line-height: initial;\\n  color: var(--danger);\\n}\\nion-item.addon-message.addon-message-no-user {\\n  margin-top: 0px;\\n}\\n:host .addon-mod_chat-notice {\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreUser } from '@features/user/services/user';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModChat } from '../../services/chat';\nimport { AddonModChatFormattedSessionMessage, AddonModChatHelper } from '../../services/chat-helper';\n\n/**\n * Page that displays list of chat session messages.\n */\n@Component({\n    selector: 'page-addon-mod-chat-session-messages',\n    templateUrl: 'session-messages.html',\n    styleUrls: ['session-messages.scss'],\n})\nexport class AddonModChatSessionMessagesPage implements OnInit {\n\n    currentUserId!: number;\n    cmId!: number;\n    messages: AddonModChatFormattedSessionMessage[] = [];\n    loaded = false;\n    courseId!: number;\n\n    protected chatId!: number;\n    protected sessionStart!: number;\n    protected sessionEnd!: number;\n    protected groupId!: number;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.sessionStart = CoreNavigator.getRequiredRouteNumberParam('sessionStart');\n            this.sessionEnd = CoreNavigator.getRequiredRouteNumberParam('sessionEnd');\n            this.chatId = CoreNavigator.getRequiredRouteNumberParam('chatId');\n            this.groupId = CoreNavigator.getRouteNumberParam('groupId') || 0;\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n\n        this.fetchMessages();\n    }\n\n    /**\n     * Fetch session messages.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchMessages(): Promise<void> {\n        try {\n            const messages = await AddonModChat.getSessionMessages(\n                this.chatId,\n                this.sessionStart,\n                this.sessionEnd,\n                this.groupId,\n                { cmId: this.cmId },\n            );\n\n            this.messages = await AddonModChat.getMessagesUserData(messages, this.courseId);\n\n            // Calculate which messages need to display the date or user data.\n            for (let index = 0 ; index < this.messages.length; index++) {\n                const prevMessage = index > 0 ? this.messages[index - 1] : undefined;\n\n                this.messages[index] = AddonModChatHelper.formatMessage(this.currentUserId, this.messages[index], prevMessage);\n\n                const message = this.messages[index];\n\n                if (message.beep && message.beep != String(this.currentUserId)) {\n                    this.loadMessageBeepWho(message);\n                }\n            }\n\n            this.messages[this.messages.length - 1].showTail = true;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errorloadingcontent', true);\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    protected async loadMessageBeepWho(message: AddonModChatFormattedSessionMessage): Promise<void> {\n        message.beepWho = await this.getUserFullname(message.beep!);\n    }\n\n    /**\n     * Get the user fullname for a beep.\n     *\n     * @param id User Id before parsing.\n     * @return User fullname.\n     */\n    protected async getUserFullname(id: string): Promise<string> {\n        const idNumber = parseInt(id, 10);\n\n        if (isNaN(idNumber)) {\n            return id;\n        }\n\n        try {\n            const user = await CoreUser.getProfile(idNumber, this.courseId, true);\n\n            return user.fullname;\n        } catch {\n            // Error getting profile.\n            return id;\n        }\n    }\n\n    /**\n     * Refresh session messages.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshMessages(refresher: IonRefresher): Promise<void> {\n        try {\n            await CoreUtils.ignoreErrors(AddonModChat.invalidateSessionMessages(this.chatId, this.sessionStart, this.groupId));\n\n            await this.fetchMessages();\n        } finally {\n            refresher.complete();\n        }\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreGroupInfo } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { AddonModChatSessionFormatted, AddonModChatSessionsSource } from '../../classes/chat-sessions-source';\n\n/**\n * Page that displays list of chat sessions.\n */\n@Component({\n    selector: 'page-addon-mod-chat-sessions',\n    templateUrl: 'sessions.html',\n})\nexport class AddonModChatSessionsPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    sessions!: CoreListItemsManager<AddonModChatSessionFormatted, AddonModChatSessionsSource>;\n\n    constructor() {\n        try {\n            const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            const chatId = CoreNavigator.getRequiredRouteNumberParam('chatId');\n            const cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                AddonModChatSessionsSource,\n                [courseId, chatId, cmId],\n            );\n\n            this.sessions = new CoreListItemsManager(source, AddonModChatSessionsPage);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n    }\n\n    get groupId(): number {\n        return this.sessions.getSource().groupId;\n    }\n\n    set groupId(value: number) {\n        this.sessions.getSource().groupId = value;\n    }\n\n    get showAll(): boolean {\n        return this.sessions.getSource().showAll;\n    }\n\n    set showAll(value: boolean) {\n        this.sessions.getSource().showAll = value;\n    }\n\n    get groupInfo(): CoreGroupInfo | undefined {\n        return this.sessions.getSource().groupInfo;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.fetchSessions();\n\n        this.sessions.start(this.splitView);\n    }\n\n    /**\n     * Fetch chat sessions.\n     *\n     * @param showLoading Display a loading modal.\n     */\n    async fetchSessions(): Promise<void> {\n        try {\n            await this.sessions.load();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errorloadingcontent', true);\n        }\n    }\n\n    /**\n     * Reload chat sessions.\n     */\n    async reloadSessions(): Promise<void> {\n        const modal = await CoreDomUtils.showModalLoading();\n\n        try {\n            await this.sessions.reload();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errorloadingcontent', true);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Refresh chat sessions.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshSessions(refresher: IonRefresher): Promise<void> {\n        try {\n            this.sessions.getSource().setDirty(true);\n\n            await this.sessions.getSource().invalidateCache();\n            await this.fetchSessions();\n        } finally {\n            refresher.complete();\n        }\n    }\n\n    /**\n     * Show more session users.\n     *\n     * @param session Chat session.\n     * @param event The event.\n     */\n    showMoreUsers(session: AddonModChatSessionFormatted, event: Event): void {\n        if (session.allsessionusers) {\n            session.sessionusers = session.allsessionusers;\n        }\n\n        event.stopPropagation();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.sessions.destroy();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}